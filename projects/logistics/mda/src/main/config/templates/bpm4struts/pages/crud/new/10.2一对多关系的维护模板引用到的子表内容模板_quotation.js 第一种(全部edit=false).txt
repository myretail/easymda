//${member.type.name}SubCrud.js==${manageable.name}SubCrud.js
//获得主表类型var mainTable=new VO();
#set ($myMainTable = '0')   
#foreach($member in $manageable.referencingManageables)
	#set($myMainTable = ${member.name})  
#end
#if($myMainTable != '0')
var addRowSub = function(){
	  gridSub.addRow([false,0,"","","","","","","","","","","","","","","","","",""],gridSub.model.getRowCount());
}


var deleteSub= function(){
	   var s= new Array();
   var sall=gridSub.model.data;
   for(var i=0;i<sall.length;i++){
   if(sall[i][0]==true){
	  s.push(i);
	  var thisCell=sall[i];
	  if(thisCell[1]!=0){//the row which will be deleted
		deletedataSub.splice(deletedataSub.length,0,thisCell[1]);
   }}}
   gridSub.model.remove(s);
 }
function call_funUpdGridSub() {
var sall=gridSub.model.data;
       for(var i=0;i<sall.length;i++){
       if(sall[i][0]==true){
         var passAll=0;
         var thisCell=sall[i];
         var padd = new SOAPClientParameters2();
         var vobject=new ${manageable.name}VOJs();
         vobject.id=thisCell[1];
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
             if(dojox.validate.isInRange(thisCell[$inum],{max:9999999, min:0})){
              var  n=new NumberQuery(); n.upNumber=thisCell[$inum];vobject.$member.name=n;
             }else{gridSub.getCell(gridSub.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}> not be double</span>";passAll=1;}//double
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')
 var  d=new DateTimeQuery();
             if(thisCell[$inum] instanceof Date){ d.upDate=dojo.date.locale.format(thisCell[$inum], gridSub.getCell(gridSub.model.fieldArray[$inum]).constraint);
             }else{gridSub.getCell(gridSub.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be date</span>"; passAll=1;}//not null
 #set ($inum= $inum + 1) 
             if(thisCell[$inum] instanceof Date){
             d.upDate=d.upDate+" "+dojo.date.locale.format(thisCell[$inum], gridSub.getCell(gridSub.model.fieldArray[$inum]).constraint);
             vobject.$member.name=d;
             }else{gridSub.getCell(gridSub.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be time</span>"; passAll=1;}//not null

#else        
 #if ($member.required)
             if(dojox.validate.isText(thisCell[$inum], {minlength: 1})){vobject.$member.name=thisCell[$inum];
             }else{gridSub.getCell(gridSub.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;}//not null
 #else
              vobject.$member.name=thisCell[$inum];
 #end
#end

#set ($inum= $inum + 1)
#end
#end
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
/*var mainTable=new ${myMainTable}VOJs();
				 mainTable.id=document.getElementById('${myMainTable}Id').value;
             vobject.contract=mainTable;*/
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!11
#foreach($member in $manageable.manageableAssociationEnds)
	#if(!${member.many})
		#set ($ifmain= '0')
		#foreach($member2 in $manageable.referencingManageables)
			#if(${member2.name}==${member.type.name})
				#set ($ifmain= '1')
			#end
		#end
		#if(${ifmain}=='1')
			var mainTable=new ${myMainTable}VOJs();
			mainTable.id=document.getElementById('${myMainTable}Id').value;
            vobject.${member.name}=mainTable;
		#else
			var manageable=new ${member.type.name}VOJs();
			 if(querydataSub[i][$inum]!=''&&querydataSub[i][$inum]!=undefined){
             manageable.id=querydataSub[i][$inum][1];
             vobject.${member.name}=manageable;
			 }else{
			 gridSub.getCell(gridSub.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;
			 }
		#end
		#set ($inum= $inum + 1)
	#end
#end



       if(passAll==0){
             if(thisCell[1]==0){//create new row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${manageable.name}, "create${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                gridSub.model.setDatum(ul,i,1);
                });
	         }else{//modify row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${manageable.name}, "update${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                });
	         }
			 querydata${manageable.name}[document.getElementById('erowIndex${manageable.name}').value][17]=querydataSub;//????????????????????????????????????????????????????????????????????????????/
        } }}//for
//submit delete
          for(var i=0;i<deletedataSub.length;i++){
               var pdel = new SOAPClientParameters();      
               pdel.add('id',deletedataSub[i]);
               SOAPClient.invoke(url${manageable.name}, "delete${manageable.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
	             
	           });
          }
          deletedataSub=new Array();
}		  

var url${manageable.name} = getUrl()+ "services/${manageable.name}ManageService";
//var deletedata${manageable.name} =  new Array();
//var querydata${manageable.name} =  new Array();
var deletedataSub =  new Array();
var querydataSub=  new Array();
var pagenumber${manageable.name}=1;
var pagesize${manageable.name}=10;
var orderBy${manageable.name}='0';
var queryvo${manageable.name}=new ${manageable.name}VOJs();
var oddstyle='';
var modelChildAdd = new dojox.grid.data.Table(null, querydataSub);
var childLayout;
var childLayoutOdd;
function buildChildLayout(pre,mystyle){
	var myLayout=[{  cells: [//优化时可加入：如过记录数超过12，即变为两行
                      [
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
		#if ($member.name != ${manageable.manageableIdentifier.name})
		  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
				 ${comma} {name: pre+i18nStr.$member.name,field:${inum}, width: 8,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #elseif ($member.type.dateType)
				${comma}  {name: pre+i18nStr.${member.name},field:${inum}, width: 8,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #else
				${comma}  {name: pre+i18nStr.$member.name, field: ${inum},width: 10,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #end
		  #set ($comma = ", ")
		#end
#end  

#foreach($member in $manageable.manageableAssociationEnds)//?????????????????????????????????????????????????/从manageableAssociationEnds中先去掉${member.many}为true；再去除主表！！！！！！！！！！！！！！！！
		#if(!${member.many}) 
			#set ($isMainTable = 0)   
			#foreach($member2 in $manageable.referencingManageables)
				#if(${member2.type.name}==${member.name})
					#set ($isMainTable = 1)
				#end
			#end
			#if($isMainTable == 0)
				${comma}  {name: pre+i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';if(querydataSub[inRowIndex]!=undefined && querydataSub[inRowIndex][${inum}]!=undefined){str=querydataSub[inRowIndex][${inum}][2];} return str;} ,width: 10,headerStyles:mystyle }
				#set ($inum= $inum + 1)
			#end
		#else
			#set ($inum= $inum + 1)
		#end
#end                        
					]]}];	 
}
childLayout=buildChildLayout(pre,headerstyle);
childLayoutOdd=buildChildLayout(pre,headerstyleodd);	
			
var childAddLayout=[{
          
                 //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydate中取数据
                       
                                 cells: [ [
                                            //{name: '选择', width: 3, get:getChoise},
                                           { name: i18nStr.chose, width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
                                           { name: i18nStr.no, width: 3, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
         ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
		#set ($inum= $inum + 1)
  #elseif ($member.type.dateType)
		${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
		#set ($inum= $inum + 1)
		${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
		#set ($inum= $inum + 1)
  #else
    #if ($member.required)
	    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:true ,maxLength:30,invalidMessage:'can not be empty'}
		#set ($inum= $inum + 1)
	#else
		#if ($member.name=='remark')
		    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 20, editor: dojox.grid.editors.Editor, editorToolbar: true  }
			#set ($inum= $inum + 1)
		#else
			${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:false ,maxLength:30}
			#set ($inum= $inum + 1)
		#end
    #end
  #end
  #set ($comma = ", ")
#end
#end  

#foreach($member in $manageable.manageableAssociationEnds)//对于单表不许其他判断
	#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydataSub[inRowIndex]!=undefined && querydataSub[inRowIndex][${inum}]!=undefined){str=querydataSub[inRowIndex][${inum}][2];strid=querydataSub[inRowIndex][${inum}][1];} return str+'<button dojoType="dijit.form.Button" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   iconClass="${member.type.name}Icon">sel</button>';} ,width: 10 }
		#set ($inum= $inum + 1)
	#end
#end
                                        ] ]
                           }]; 
#end