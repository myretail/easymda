<script type="text/javascript" >

#set ($inum= 1)
#foreach($memberAs in $manageable.manageableAssociationEnds)//对于可修改的layout，($member in $manageable.manageableAssociationEnds)并if(!${member.many})  的字段应弹出Float的选择窗口待测试
	#if(!${memberAs.many})      
		
  var url${memberAs.association.name} = getUrl()+ "services/${manageable.name}ManageService";
  var deletedata${memberAs.association.name} =  new Array();
  var querydata${memberAs.association.name} =  new Array();
  var pagenumber${memberAs.association.name}=1;
  var totalCount${memberAs.association.name}=0;
  var pagesize${memberAs.association.name}=10;
  var orderBy${memberAs.association.name}='0';
  var queryvo${memberAs.association.name}=new ${manageable.name}VOJs();
  var oddstyle='';
  var model${memberAs.association.name} = new dojox.grid.data.Table(null, querydata${memberAs.association.name});
  var grid${memberAs.association.name};
  
#foreach($member in $manageable.manageableAttributes)
	#if ($member.type.fullyQualifiedName=='com.logistics.entity.order.StringEnum')
		/*	var p${manageable.name}${member.name} = new SOAPClientParameters();
			p${manageable.name}${member.name}.add('eType','${member.name}');
			var item${manageable.name}${member.name} = new Array();
				SOAPClient.invoke(urle, "getEnumerationByType", p${manageable.name}${member.name}, false,  function GetEnu_callBack(ul, soapResponse){   
				for(var i = 0; i < ul.length; i++){		
				  var ulo=ul[i];
				  item${manageable.name}${member.name}.push({name: ulo["ns:fieldName"], value:ulo["ns:fieldName"]});
				}                
			});       
			var ${manageable.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: item$member.name}}); */
			
	#end
#end  

//have set function's manageableAssociationEnds
#foreach($member in $manageable.manageableAssociationEnds)
	/*var p${manageable.name}${member.name} = new SOAPClientParameters();
	var items${manageable.name}${member.name} = new Array();  
		p${manageable.name}${member.name}.add('${member.type.name}VO',new  ${member.type.name}VOJs()) ;
		p${manageable.name}${member.name}.add('pageNumber',0) ;
		p${manageable.name}${member.name}.add('pageSize',0) ;
	    p${manageable.name}${member.name}.add('orderBy','0') ;
	SOAPClient.invoke(getUrl()+ "services/"+"${member.type.name}ManageService","get${member.type.name}", p${manageable.name}${member.name}, false,  function GetEnu_callBack(ul, soapResponse){      
				for(var i = 0; i < ul.length-1; i++){		
				  var ulo=ul[i];
				  items${manageable.name}${member.name}.push({name: ulo["ns:${member.type.name}Name"], value:ulo["ns:id"]});
				}                
	});       
	var ${manageable.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: items${manageable.name}${member.name} }});*/
var ${manageable.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: [] }});
	function ${manageable.name}${member.name}Set(id,value){
        	/*var itemselect=${member.name}Store._getItemByIdentity(value);
        	if(itemselect!='undefined'&& itemselect!=null){
        	}*/
        }
#end

  
  
var getVO${memberAs.association.name}=function(queryvo){

	var pu = new SOAPClientParameters2();
	pu.add('${manageable.name}VO',queryvo) ;
	pu.add('pageNumber',pagenumber${memberAs.association.name}) ;
	pu.add('pageSize',pagesize${memberAs.association.name}) ;
	pu.add('orderBy',orderBy${memberAs.association.name}) ;
	SOAPClient.invoke(url${memberAs.association.name},"get${manageable.name}", pu, false,  function GetEnu_callBack(ul, soapResponse){      
	querydata${memberAs.association.name}=${manageable.name}VOtoArray_fun(ul,true);
	totalCount${memberAs.association.name}=ul[ul.length-1]["ns:id"]; 
	}); 
	var totalpage=Math.ceil(new Number(totalCount${memberAs.association.name})/pagesize${memberAs.association.name});
	
	if(totalpage>1){
		if(pagenumber${memberAs.association.name}==1){
			dijit.byId("but6${memberAs.association.name}").setDisabled(true);
			dijit.byId("but7${memberAs.association.name}").setDisabled(false);
		}else if(pagenumber${memberAs.association.name}==totalpage){
			dijit.byId("but6${memberAs.association.name}").setDisabled(false);
			dijit.byId("but7${memberAs.association.name}").setDisabled(true);
		}else{
			dijit.byId("but6${memberAs.association.name}").setDisabled(false);
			dijit.byId("but7${memberAs.association.name}").setDisabled(false);
		}
	}else{
		dijit.byId("but6${memberAs.association.name}").setDisabled(true);
		dijit.byId("but7${memberAs.association.name}").setDisabled(true);
	
	}
	if(pagesize${memberAs.association.name}==0){
		totalpage=1;
		dijit.byId("but6${memberAs.association.name}").setDisabled(true);
		dijit.byId("but7${memberAs.association.name}").setDisabled(true);
	}
	if(totalpage==1)pagenumber${memberAs.association.name}=1;
	
	 document.getElementById("rowCount${memberAs.association.name}").innerHTML=i18nStr.di+" "+pagenumber${memberAs.association.name}+" "+i18nStr.page+" / "+i18nStr.totle+" "+totalpage+" "+i18nStr.page+" / "+i18nStr.sum+" "+totalCount${memberAs.association.name}+" "+i18nStr.rowSize; 	

	querydata${memberAs.association.name}.splice(querydata${memberAs.association.name}.length-1,1);
	model${memberAs.association.name}.setData(querydata${memberAs.association.name});
}

var build${memberAs.association.name}=function(){
		var queryFloat${memberAs.type.name}=new ${memberAs.type.name}VOJs();
		queryFloat${memberAs.type.name}.id=mainID;
		queryvo${memberAs.association.name}.${memberAs.name}=queryFloat${memberAs.type.name};
		getVO${memberAs.association.name}(queryvo${memberAs.association.name});
			  grid${memberAs.association.name} = new dojox.Grid({
					title: "",
					id: "grid${memberAs.association.name}",
					jsId: "grid${memberAs.association.name}",
					structure: layout${memberAs.association.name},
					rowCount:querydata${memberAs.association.name}.length,
					model:model${memberAs.association.name}
				}, dojo.byId("grid${memberAs.association.name}"));

}
	var layout${memberAs.association.name}=[{
           //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydate中取数据
   
			 cells: [ [
					   { name: i18nStr.chose, width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
					   { name: i18nStr.no, width: 3, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
         ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
		#set ($inum= $inum + 1)
  #elseif ($member.type.dateType)
		${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
		#set ($inum= $inum + 1)
		${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
		#set ($inum= $inum + 1)
  #else
    #if ($member.required)
	    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:true ,maxLength:30,invalidMessage:'can not be empty'}
		#set ($inum= $inum + 1)
	#else
		#if ($member.name=='remark')
		    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor, editorToolbar: true  }
			#set ($inum= $inum + 1)
		#else
			${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:false ,maxLength:30}
			#set ($inum= $inum + 1)
		#end
    #end
  #end
  #set ($comma = ", ")
#end
#end  

#foreach($member in $manageable.manageableAssociationEnds)//对于单表不许其他判断
	#if(!${member.many})  
		 #set ($ifo = 0)
		#foreach($member2 in $manageable.referencingManageables)
			#if(${member2.name}==${member.type.name})
				#set ($ifo = 1)
			#end
		#end
		#if($ifo == 0)
			 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${memberAs.association.name}[inRowIndex]!=undefined && querydata${memberAs.association.name}[inRowIndex][${inum}]!=undefined && querydata${memberAs.association.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${memberAs.association.name}[inRowIndex][${inum}][2];strid=querydata${memberAs.association.name}[inRowIndex][${inum}][1];} return str+'<button dojoType="dijit.form.Button" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   iconClass="${member.type.name}Icon">sel</button>';} ,width: 10 }
			#set ($inum= $inum + 1)
		#else
			#set ($inum= $inum + 1)
		#end
	#else
		#set ($inum= $inum + 1)
	#end
#end
                                        ] ]
                           }]; 


var addRow${memberAs.association.name} = function(){
	grid${memberAs.association.name}.addRow([false,0,"","",""],grid${memberAs.association.name}.model.getRowCount());
} 

function remove${memberAs.association.name}(){
       var s= new Array();
       var sall=grid${memberAs.association.name}.model.data;
       for(var i=0;i<sall.length;i++){
       if(sall[i][0]==true){
          s.push(i);
          var thisCell=sall[i];
          if(thisCell[1]!=0){//the row which will be deleted
            deletedata${memberAs.association.name}.splice(deletedata${memberAs.association.name}.length,0,thisCell[1]);
       }}}
       grid${memberAs.association.name}.model.remove(s);//grid.removeSelectedRows();
 }
function call_funUpd${memberAs.association.name}() {
       var sall=grid${memberAs.association.name}.model.data;
       for(var i=0;i<sall.length;i++){
       if(sall[i][0]==true){
         var passAll=0;
         var thisCell=sall[i];
         var padd = new SOAPClientParameters2();
         var vobject=new ${manageable.name}VOJs();
         vobject.id=thisCell[1];
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
             if(dojox.validate.isInRange(thisCell[$inum],{max:9999999, min:0})){
              var  n=new NumberQuery(); n.upNumber=thisCell[$inum];vobject.$member.name=n;
             }else{grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}> not be double</span>";passAll=1;}//double
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')
var  d=new DateTimeQuery();
             if(thisCell[$inum] instanceof Date){ d.upDate=dojo.date.locale.format(thisCell[$inum], grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).constraint);
             }else{grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be date</span>"; passAll=1;}//not null
 #set ($inum= $inum + 1) 
             if(thisCell[$inum] instanceof Date){
             d.upDate=d.upDate+" "+dojo.date.locale.format(thisCell[$inum], grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).constraint);
             vobject.$member.name=d;
             }else{grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be time</span>"; passAll=1;}//not null
 
#else        
 #if ($member.required)
             if(dojox.validate.isText(thisCell[$inum], {minlength: 1})){vobject.$member.name=thisCell[$inum];
             }else{grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;}//not null
 #else
              vobject.$member.name=thisCell[$inum];
 #end
#end

#set ($inum= $inum + 1)
#end
#end

#foreach($member in $manageable.manageableAssociationEnds)
	#if(!${member.many})
		#set ($ifo = 0)
		#foreach($member2 in $manageable.referencingManageables)
			#if(${member2.name}==${member.type.name})
				#set ($ifo = 1)
			#end
		#end
		#if($ifo == 0)
			var manageable=new ${member.type.name}VOJs();
			 if(querydata${memberAs.association.name}[i][$inum]!=''&&querydata${memberAs.association.name}[i][$inum]!=undefined){
             manageable.id=querydata${memberAs.association.name}[i][$inum][1];
             vobject.${member.name}=manageable;
			 }else{
			 grid${memberAs.association.name}.getCell(grid${memberAs.association.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;
			 }
			#set ($inum= $inum + 1)
		#else
			var manageable=new ${member.type.name}VOJs();
			 manageable.id=mainID;
             vobject.${member.name}=manageable;
			 #set ($inum= $inum + 1)
		#end
	#else
		#set ($inum= $inum + 1)
	#end
#end



       if(passAll==0){
             if(thisCell[1]==0){//create new row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${memberAs.association.name}, "create${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                grid${memberAs.association.name}.model.setDatum(ul,i,1);
				});
	         }else{//modify row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${memberAs.association.name}, "update${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                });
	         }
        } }}//for
//submit delete
          for(var i=0;i<deletedata${memberAs.association.name}.length;i++){
               var pdel = new SOAPClientParameters();      
               pdel.add('id',deletedata${memberAs.association.name}[i]);
               SOAPClient.invoke(url${memberAs.association.name}, "delete${manageable.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
	             
	           });
          }
          deletedata${memberAs.association.name}=new Array();
          //dojo.byId("rowCount").innerHTML = 'saved'; 
//submit delete end          
 } 
 
#foreach($member in $manageable.manageableAssociationEnds)
	function select${member.type.name}Fun(rep){
		querydata${memberAs.association.name}[select${member.type.name}InRow][no${member.type.name}]=rep;
		grid${memberAs.association.name}.updateRow(select${member.type.name}InRow);		
	}
#end
#set($inum=$inum+1)
#end
#if($inum==2)
	//build${memberAs.association.name}();
#end
#end
/* function querybutton${memberAs.association.name}(){
              //var p = new SOAPClientParameters2();
              var d,n;
              var validstate=0;
              //queryvo${memberAs.association.name}.id=0 ;
              queryvo${memberAs.association.name}=new ${manageable.name}VOJs();
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
              n=queryNumber_fun("${manageable.name}${member.name}");
              if(n==null){validstate=1;}else if(n.upSign!="%"){queryvo${memberAs.association.name}.${member.name}=n;}  
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')   
              d=queryDate_fun("${manageable.name}${member.name}");
              if(d==null){validstate=1;}else if(d.upSign!="%"){queryvo${memberAs.association.name}.${member.name}=d;}
#else
	          if(query${manageable.name}${member.name}.getDisplayedValue()!="")queryvo${memberAs.association.name}.${member.name}=query${manageable.name}${member.name}.getDisplayedValue();//
#end
#end
#end
			
#foreach($member in $manageable.manageableAssociationEnds)
	if(query${manageable.name}${member.name}.getDisplayedValue()!=""){
				var ${manageable.name}${member.name}Query= new ${member.type.name}VOJs();
				//${member.name}Query.${manageable.name}Name=query${member.name}.getDisplayedValue();
				${manageable.name}${member.name}Query.id=query${manageable.name}${member.name}.getValue();
				queryvo${memberAs.association.name}.${member.name}=${manageable.name}${member.name}Query;
			  }
#end

			if(validstate==0){
              pagenumber=1;
              getVO(queryvo${memberAs.association.name},pagenumber,pagesize,'0'); 
              //if(totalpage>1){dijit.byId("but7").setDisabled(false);}else{dijit.byId("but7").setDisabled(true);} 
             }      
       }
	 
var querydis${memberAs.association.name} = function(){
               querydisplay("queryDiv${memberAs.association.name}");
            }
 */
</script>
