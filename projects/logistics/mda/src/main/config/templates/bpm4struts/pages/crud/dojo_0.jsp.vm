<html>
<head> 
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title></title>
     <style type="text/css">
            @import "../dojo/dojo-release-1.0.0/dijit/themes/tundra/tundra.css";
            @import "../dojo/dojo-release-1.0.0/dojo/resources/dojo.css";
            @import "../dojo/dojo-release-1.0.0/dojox/grid/_grid/tundraGrid.css";
            @import "../dojo/dojo-release-1.0.0/dojox/grid/_grid/Grid.css";
            @import "../js/wlProject.css";
	
      </style>
      <script type="text/javascript" src="../dojo/dojo-release-1.0.0/dojo/dojo.js"  
                djConfig="parseOnLoad: true, isDebug: true,locale: 'zh-cn', extraLocale: ['zh-TW', 'fr']"></script>
      <script>
    
            dojo.require("dojo.data.ItemFileWriteStore");
            dojo.require("dijit.layout.SplitContainer");
            dojo.require("dijit.layout.ContentPane");
            dojo.require("dijit.Tree");
            dojo.require("dojo.parser");
            dojo.require("dijit._tree.dndSource");
            dojo.require("dijit.layout.TabContainer");
            dojo.require("dijit.form.Button");
            dojo.require("dojox.grid.Grid");
            dojo.require("dojox.grid._data.model");
            dojo.require("dojo.i18n");
            dojo.require("dojox.validate._base");
            dojo.require("dijit.form.ValidationTextBox");
            dojo.require("dijit.form.TextBox");
            dojo.require("dijit.form.FilteringSelect");
            dojo.require("dojox.grid._data.dijitEditors");
            
            dojo.registerModulePath("mydojo", "../../../js/mydojo");
            dojo.require("mydojo.FilteringSelect");
            dojo.require("mydojo.ValidationTextBox");
            dojo.require("mydojo.NumberTextBox");
     </script>
        
     <script type="text/javascript" src="../js/soapclient.js"></script>
     <script type="text/javascript" src="../js/wlProject.js"></script>
     <script type="text/javascript" >
     
          var griddata =  new Array();
          var deletedata=new Array();
          var querydata =  new Array();
          formatDate = function(inDatum){
                                  		  if(Boolean(dojo.date.locale.parse(thisCell[inDatum], {selector: 'date', datePattern: "YYYY.MM.DD"}))){return dojo.date.locale.format(new Date(inDatum),this.constraint);
                                         }else{return '<span style={color:red;line-height:16px}>can not be null</span>';}
                                  		}
var model = new dojox.grid.data.Table(null, griddata);
var editlayout =[{type: 'dojox.GridRowView', width: '20px' },{
                       
             cells: [
                      [
                       { name: 'choise', width: 3, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
                       { name: 'No.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
                       ${comma} {name: '$member.name',field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
#elseif ($member.type.dateType)
                       ${comma}  {name: '$member.name',field:${inum}, width: 10,editor: dojox.grid.editors.DateTextBox,  constraint: {formatLength: 'long', selector: "date" ,datePattern: "yyyy-MM-dd"}}
                       #set ($inum= $inum + 1)
                        ${comma}  {name: '${member.name}Time',field:${inum}, width: 10,editor: dojox.grid.editors.TimeTextBox, constraint: {formatLength: 'long', selector: "time" ,timePattern: "HH:mm"}}
#else
#if ($member.required)
                         ${comma}  {name: '$member.name', field: ${inum},width: 15 , editor: mydojo.ValidationTextBox ,required:true ,maxLength:30,invalidMessage:'can not be empty'}
#else
                         ${comma}  {name: '$member.name', field: ${inum},width: 15, editor: mydojo.ValidationTextBox , required:false ,maxLength:100,invalidMessage:'' }
#end
#end
#set ($inum= $inum + 1)
#set ($comma = ", ")
#end
#end                       
#foreach($member in $manageable.manageableAssociationEnds)
#if ($member.required)
                         ${comma}  {name: '$member.name', field: ${inum},width: 15 , editor: mydojo.ValidationTextBox ,required:true ,maxLength:30,invalidMessage:'can not be empty'}
                         #set ($inum= $inum + 1)
                         ${comma}  {name: '${member.name}Id', field: ${inum}}//select or pop window
                         #set ($inum= $inum + 1)
#else
                         ${comma}  {name: '$member.name', field: ${inum},width: 15, editor: mydojo.ValidationTextBox , required:false ,maxLength:100,invalidMessage:'' }
                         #set ($inum= $inum + 1)
                         ${comma}  {name: '${member.name}Id', field: ${inum}}//select or pop window
                         #set ($inum= $inum + 1)
#end
#end

                         ]
                     ]
                          }];
                          



var querylayoutfield =[{type: 'dojox.GridRowView', width: '20px' },{
                       
             cells: [
                      [
                       { name: 'choise', width: 3, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
                       { name: 'No.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
                    ${comma}  {name: '$member.name', width: 10 }

#set ($inum= $inum + 1)
#set ($comma = ", ")
#end
#end                       
#foreach($member in $manageable.manageableAssociationEnds)
                         ${comma}  {name: '$member.name', field: ${inum},width: 10 }
                         #set ($inum= $inum + 1)
                         ${comma}  {name: '${member.name}Id', field: ${inum}}//select or pop window
                         #set ($inum= $inum + 1)

#end

                         ]
                     ]
                          }];


var querylayout =[{type: 'dojox.GridRowView', width: '20px' },{
                       
             cells: [
                      [
                       { name: 'choise', width: 3, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
                       { name: 'No.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
                    ${comma}  {name: '$member.name', width: 10, get: function(inRowIndex){ return querySubdata[$inum];} }

#set ($inum= $inum + 1)
#set ($comma = ", ")
#end
#end                       
#foreach($member in $manageable.manageableAssociationEnds)
                         ${comma}  {name: '$member.name', width: 10, get: function(inRowIndex){ return querySubdata[$inum];} }
                         #set ($inum= $inum + 1)
                         ${comma}  {name: '${member.name}Id', width: 10, get: function(inRowIndex){ return querySubdata[$inum];}}//select or pop window
                         #set ($inum= $inum + 1)

#end

                         ]
                     ]
                          }];
                          
                          
                          
                                                                    
 function call_funUpd() {
           
           var s = grid.selection.getSelected();
           for(var i=0;i<s.length;i++){
             var ii=s[i];
             var passAll=0;
             var thisCell=grid.model.data[ii];
             var padd = new SOAPClientParameters2();
             var vobject=new Object();
             vobject.id=thisCell[1];
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
             if(dojox.validate.isInRange(thisCell[$inum],{max:9999999, min:0})){vobject.$member.name=thisCell[$inum];
             }else{grid.getCell($inum).getNode(ii).innerHTML="<span style={color:red;line-height:16px}>can not be double</span>";passAll=1;}//double
#elseif ($member.required)
             if(dojox.validate.isText(thisCell[$inum], {minlength: 1})){vobject.$member.name=thisCell[$inum];
             }else{grid.getCell($inum).getNode(ii).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;}//not null
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')    
             if(Boolean(dojo.date.locale.parse(thisCell[$inum], {selector: 'date', datePattern: "YYYY-MM-DD"}))){
                 if(Boolean(dojo.date.locale.parse(thisCell[$inum +1], {selector: 'time', timePattern: "HH:mm"}))){
                  vobject.$member.name=thisCell[$inum]+" "+thisCell[$inum +1];
                 }else{
                  grid.getCell($inum +1).getNode(ii).innerHTML="<span style={color:red;line-height:16px}>not time</span>";
                 }//not date
             }else{
                  grid.getCell($inum).getNode(ii).innerHTML="<span style={color:red;line-height:16px}>not date</span>";
             }
#set ($inum= $inum + 1)             
#else
             vobject.$member.name=thisCell[$inum];
#end
#set ($inum= $inum + 1)
#end
#end






        if(passAll==0){
             if(thisCell[1]==0){//create new row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url, "create${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                grid.model.setDatum(ul,i,1);
                });
	         }else{//modify row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url, "update${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                });
	         }
        } }//for
//submit delete
          for(var i=0;i<deletedata.length;i++){
               var pdel = new SOAPClientParameters();      
               pdel.add('id',deletedata[i]);
               SOAPClient.invoke(url, "delete${manageable.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
	             
	           });
          }
          deletedata=new Array();
          dojo.byId("rowCount").innerHTML = 'saved'; 
//submit delete end          
 }

 function removeSelectedRows(){
           var s = grid.selection.getSelected();
           for(var i=0;i<s.length;i++){ 
             var ii=s[i];
             var thisCell=grid.model.data[ii];
             if(thisCell[1]!=0){//the row which will be deleted
               deletedata.splice(deletedata.length,0,thisCell[1]);
             }
           }    
           grid.removeSelectedRows();
     }
        
addRow = function(){
          	grid.addRow([false,0,"","",""],grid.model.getRowCount());
	        } 
   
//query
         
function querybutton(){
              var p = new SOAPClientParameters2();
              var queryvo=new Object();
              queryvo.id=0 ;
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
    queryvo.${member.name}= query${member.name}.getDisplayedValue();//double
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')   
     if(Boolean(dojo.date.locale.parse(query${member.name}.getDisplayedValue(), {selector: 'date', datePattern: "YYYY-MM-DD"}))){
                 if(Boolean(dojo.date.locale.parse(query${member.name}Time.getDisplayedValue(), {selector: 'time', timePattern: "HH:mm"}))){
                   queryvo.${member.name}= query${member.name}.getDisplayedValue()+" "+query${member.name}Time.getDisplayedValue();//dateTime
                 }else{
                  alert('${member.name}is not right');
                 }//not date
             }else{
                  alert('${member.name} time is not right');;
             }
    
#else
    queryvo.${member.name}= '%'+query${member.name}.getDisplayedValue()+'%';//
#end
#end
#end          pagenumber=1;
              p.add('${manageable.name}VO',queryvo) ;
              p.add('pageNumber',pagenumber) ;
      		    p.add('pageSize',pagesize) ;
      		    p.add('orderBy','%') ;
              SOAPClient.invoke(url, "get${manageable.name}", p, false,  function GetEnu_callBack(ul, soapResponse){   
                     querydata=new Array();        
                     for(var i = 0; i < ul.length; i++){		
                      var items = new Array();
                      var ulo=ul[i];
                        //items[0] = false;
                        items[0] = ulo["ns:id"];
#set ($inum = 1)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
                        items[$inum] = ulo["ns:$member.name"];//
#set ($inum= $inum + 1)
#end
#end


#foreach($member in $manageable.manageableAssociationEnds)
                         items[$inum] = ulo["ns:$member.name"];
                         #set ($inum= $inum + 1)
#end

                      querydata[i]=items;
                    }                
                });       
                model.setData(querydata); 
         }
     </script>
</head>
<body class="tundra">
     
     	<div id="queryDiv" style="margin-right: 30px;  height: 23%; display:none;" >
	                        <table align="center" width=86% class="queryTable"  >
	                        <tr ><td align="center">Please input criterial:</td><td colspan="2"></td><td ></td><td colspan="2"></td></tr> 
						          <tr ><td align="center"></td><td colspan="2"></td><td ></td><td colspan="2"></td></tr> 
                      
                            <td align="right" >customerOrderNo:</td><td align="left"  ><input type="text"  jsId="querycustomerOrderNo"   dojoType="dijit.form.TextBox"  /></td>
                            <td align="right" >contractNo:</td><td align="left" colspan="2" ><input type="text"  jsId="querycontractNo"   dojoType="dijit.form.TextBox"  /></td>
					            </tr><tr height="6" >
#set ($inum =1 )                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($inum==1)
#set ($inum=2) 
                                <tr  height="6" >
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
                                <td align="right" >${member.name}:</td> <td align="left" colspan="2"><input type="text" jsId="query${member.name}"  id="query${member.name}"  dojoType="mydojo.NumberTextBox"  /></td>
                        
#elseif ($member.type.dateType)
                                <td align="right" >${member.name}:</td>
                                <td align="left" width="200px" ><input style="{width:200px}"   jsId="query${member.name}" id="query${member.name}"  constraints="{datePattern:'yyyy-MM-dd'}" dojoType="dijit.form.DateTextBox"  /></td><td align="left" >
                                <input style="{width:100px}" jsId="query${member.name}Time" id="query${member.name}Time" value="00:00" dojoType="dijit.form.TimeTextBox" constraints="{timePattern:'HH:mm'}"   invalidMessage="Invalid time. Use HH:mm where HH is 00 - 23 hours."></td> 
                                
#else
                                <td align="right" >${member.name}:</td><td align="left" colspan="2" ><input type="text"  id="query${member.name}"  jsId="query${member.name}"   dojoType="dijit.form.TextBox"  /></td>
#end

#else
#set ($inum=2) 
    
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
                                <td align="right" >${member.name}:</td> <td align="left" colspan="2"><input type="text" jsId="query${member.name}"  id="query${member.name}"  dojoType="mydojo.NumberTextBox"  /></td>
                        
#elseif ($member.type.dateType)
                                <td align="right" >${member.name}:</td>
                                <td align="left" width="200px" ><input style="{width:200px}"   jsId="query${member.name}" id="query${member.name}"  constraints="{datePattern:'yyyy-MM-dd'}" dojoType="dijit.form.DateTextBox"  /></td><td align="left" >
                                <input style="{width:100px}" jsId="query${member.name}Time" id="query${member.name}Time" value="00:00" dojoType="dijit.form.TimeTextBox" constraints="{timePattern:'HH:mm'}"   invalidMessage="Invalid time. Use HH:mm where HH is 00 - 23 hours."></td> 
                                
#else
                                <td align="right" >${member.name}:</td><td align="left" colspan="2" ><input type="text"  id="query${member.name}"  jsId="query${member.name}"   dojoType="dijit.form.TextBox"  /></td>
#end
					          </tr>
                                  <tr height="6" ></tr>
#end
#end                       
#end
	
                                  <tr align="center"><td></td><td colspan="2"><a onclick="querybutton();"><img src="../image/332.gif" height="20" width="20" border="0">OK</a></td><td></td><td colspan="2"></td></tr>
						    </table>
	     </div>
	       	<div align="right">
	          	 &nbsp;&nbsp;&nbsp;<a onclick="addRow();"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/add.gif" height="20" width="20" border="0">add</a>
         					 <!--button dojoType="dijit.form.Button" onclick="update_fun();">update</button-->&nbsp;&nbsp;&nbsp;
					         &nbsp;&nbsp;&nbsp;<a onclick="removeSelectedRowsGrid();"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/del.gif" height="20" width="20" border="0">delete</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="querydis();"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/332.gif" height="20" width="20" border="0">query</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="upPage();" id="but6" style="{display:none}" onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/pageup.gif" height="20" width="20" border="0">pageup</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="downPage();" id="but7"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/pagedown.gif" height="20" width="20" border="0">pagedown</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="allpage();" id="but8"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/allpage.gif" height="20" width="20" border="0">allpage</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="topage();" id="but9" style="{display:none}" onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/topage.gif" height="20" width="20" border="0">topage</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="allopen();" id="but10"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/allopen.gif" height="20" width="20" border="0">allopen</a>
         					 &nbsp;&nbsp;&nbsp;<a onclick="allclose();" id="but11"  onmouseover="this.style.cursor='pointer'; " onmouseout="this.style.cursor='';" ><img src="../image/allclose.gif" height="20" width="20" border="0">allclose</a>
         		</div>   
	        
	      
	         <div id="rowCount"></div>
	   
	         <div id="grid"  dojoType="dojox.Grid" autoWidth="false" style="{height:90%;width:100%}"  jsId="grid"	model="model"  structure="layout" singleClickEdit="true" ></div>
</body></html>	
