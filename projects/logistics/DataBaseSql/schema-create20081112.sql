
    create table ENUMERATION (
        ID BIGINT generated by default as identity (start with 1),
        FIELD_NAME VARCHAR(256) not null,
        ENUMERATION_TYPE VARCHAR(256) not null,
        PARENT_ID BIGINT,
        primary key (ID)
    );

    create table HANDLE_INFO (
        ID BIGINT generated by default as identity (start with 1),
        HANDLE_SNO VARCHAR(256) not null,
        HANDLE_NAME VARCHAR(256) not null,
        PROGRAM_NAME VARCHAR(256) not null,
        REMARK VARCHAR(256),
        HANDLE_TYPE VARCHAR(256),
        primary key (ID)
    );

    create table ORGA_INFO (
        ID BIGINT generated by default as identity (start with 1),
        ORGA_SNO VARCHAR(256) not null,
        ORGA_NAME VARCHAR(256) not null,
        ORGA_CODE VARCHAR(256),
        REMARK VARCHAR(256),
        ORGA_STATE VARCHAR(256) not null,
        primary key (ID)
    );

    create table ORGA_PEOPLE (
        ID BIGINT generated by default as identity (start with 1),
        PEOPLE_FK BIGINT not null,
        ORGA_FK BIGINT not null,
        primary key (ID)
    );

    create table PEOPLE (
        ID BIGINT generated by default as identity (start with 1),
        PEOPLE_NAME VARCHAR(256) not null,
        PEOPLE_PASSWORD VARCHAR(256) not null,
        REMARK VARCHAR(256),
        PEOPLE_STATUS VARCHAR(256) not null,
        BIRTH_DAY DATETIME not null,
        SEX VARCHAR(256) not null,
        BIRTH_PLACE VARCHAR(256),
        ADDRESS VARCHAR(256),
        TEL VARCHAR(256),
        ENGAGE_MODE VARCHAR(256),
        ENGAGE_DATE DATETIME,
        GRADE VARCHAR(256),
        primary key (ID)
    );

    create table PEOPLE_ROLE (
        ID BIGINT generated by default as identity (start with 1),
        ROLE_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        primary key (ID)
    );

    create table ROLE_INFO (
        ID BIGINT generated by default as identity (start with 1),
        ROLE_NAME VARCHAR(256) not null,
        REMARK VARCHAR(256),
        primary key (ID)
    );

    create table ROLE_OPERATE (
        ID BIGINT generated by default as identity (start with 1),
        ROLE_FK BIGINT not null,
        HANDLE_FK BIGINT not null,
        primary key (ID)
    );

    create table WLTRWITHOR (
        ID BIGINT generated by default as identity (start with 1),
        LOAD_NUM DOUBLE not null,
        FACT_NUM DOUBLE not null,
        CARRY_BOX_NUM DOUBLE not null,
        FACT_BOX_NUM DOUBLE not null,
        LOAD_WEIGHT DOUBLE not null,
        FACT_WEIGHT DOUBLE not null,
        LOAD_CUBAGE DOUBLE not null,
        FACT_CUBAGE DOUBLE not null,
        PLAN_FEE DOUBLE not null,
        START_GOODS_STATE VARCHAR(256) not null,
        END_GOODS_STATE VARCHAR(256) not null,
        REMARK VARCHAR(256),
        TASK_ROW_FK BIGINT not null,
        ORDER_ROW_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_ACCIDENT (
        ID BIGINT generated by default as identity (start with 1),
        ACCIDENT_TIME DATETIME not null,
        ACCIDENT_PLACE VARCHAR(256) not null,
        ACCIDENT_DESCRIBE VARCHAR(256) not null,
        BOOK_TIME DATETIME not null,
        REPORT_TIME DATETIME not null,
        SOLVE VARCHAR(256),
        LOSS_FEE DOUBLE,
        COMPENSATION DOUBLE,
        COMPENSATE_TIME DATETIME,
        INSURER_FEE DOUBLE,
        INSURER_TIME DATETIME,
        REMARK VARCHAR(256),
        TASK_ROWS VARCHAR(256),
        VOITURE_FK BIGINT not null,
        BREAKER_FK BIGINT not null,
        BOOKER_FK BIGINT not null,
        REPORTER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CARD (
        ID BIGINT generated by default as identity (start with 1),
        NAME VARCHAR(256) not null,
        COMPANY VARCHAR(256) not null,
        BRITH_DAY TIME not null,
        MONEY DOUBLE not null,
        LOWER_GUARD DOUBLE not null,
        STATUS VARCHAR(256) not null,
        PEOPLE VARCHAR(256) not null,
        VOITURE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CARD_FULL (
        ID BIGINT generated by default as identity (start with 1),
        NAME VARCHAR(256) not null,
        BRITH_DAY TIME not null,
        SUM DOUBLE not null,
        STATUS VARCHAR(256) not null,
        PEOPLE VARCHAR(256) not null,
        primary key (ID)
    );

    create table WL_CARRY_COST (
        ID BIGINT generated by default as identity (start with 1),
        START_DTE DATETIME not null,
        FILL_DATE DATETIME not null,
        AFFIRM_DATE DATETIME,
        COST_SUM DOUBLE not null,
        COST_SORT VARCHAR(256) not null,
        REMARK VARCHAR(256),
        VOITURE_FK BIGINT not null,
        START_STEER_ROW_FK BIGINT not null,
        FILLER_FK BIGINT not null,
        AFFIRMER_FK BIGINT ,
        primary key (ID)
    );

    create table WL_CERTIFICATE (
        ID BIGINT generated by default as identity (start with 1),
        BRITH_DAY TIME not null,
        CERTIFICATE_CODE VARCHAR(256) not null,
        CERTIFICATE_TYPE VARCHAR(256) not null,
        AVAIL_DATE TIME not null,
        PEOPLE_FK BIGINT not null,
        OWNER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_COMPENSATE (
        ID BIGINT generated by default as identity (start with 1),
        INSURE_CODE VARCHAR(256) not null,
        BENEFICIARY VARCHAR(256) not null,
        CUST_PEOPLE VARCHAR(256) not null,
        BENE_PEOPLE VARCHAR(256) not null,
        ACCEPT_DATE TIME not null,
        ACCEPT_FEE DOUBLE not null,
        CONTENT VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        ORDER_FK BIGINT not null,
        TASK_ROW_FK BIGINT not null,
        CUSTOMER_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CONTRACT (
        ID BIGINT generated by default as identity (start with 1),
        NO VARCHAR(256),
        STATUS VARCHAR(256) not null,
        TEL VARCHAR(256),
        FILL_DATE DATETIME not null,
        START_DATE DATETIME not null,
        END_DATE DATETIME not null,
        CONTRACT_TYPE VARCHAR(256) not null,
        CONT_RELATION VARCHAR(256) not null,
        PAY_WAY VARCHAR(256) not null,
        CHECK_DATE DATETIME,
        INSURANCE VARCHAR(256) not null,
        CONTRACT_SUM DOUBLE,
        EDITION_NO DOUBLE not null,
        REMARK VARCHAR(256),
        CUSTOMER_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        ORDER_CODE_FK BIGINT not null,
        DEP_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CUSTOMER (
        ID BIGINT generated by default as identity (start with 1),
        CUSTOMER_NAME VARCHAR(256) not null,
        JURIDICAL_PERSON VARCHAR(256),
        ENROL_DATE DATETIME,
        ENROL_FUND DOUBLE,
        TAX_RESISTER_NO VARCHAR(256),
        BANK VARCHAR(256),
        ACOUNT_NO VARCHAR(256),
        LINKMAN VARCHAR(256) not null,
        HEAD_TEL VARCHAR(256) not null,
        TEL VARCHAR(256),
        MOBIL VARCHAR(256),
        EMAIL VARCHAR(256),
        FAX VARCHAR(256),
        RELATION VARCHAR(256) not null,
        PEOPLE_CODE VARCHAR(256),
        PEOPLE_NAME VARCHAR(256),
        PASS_WORD VARCHAR(256),
        VALUE VARCHAR(256),
        ADDRESS VARCHAR(256),
        PARENT_CUSTOMER_I_D BIGINT,
        CUSTOMER_STATUS VARCHAR(256) not null,
        CUSTOMER_SORT VARCHAR(256) not null,
        PEOPLE_FK BIGINT not null,
        PLACE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CUST_CODE (
        ID BIGINT generated by default as identity (start with 1),
        PAR_CODE BIGINT not null,
        CODE VARCHAR(256) not null,
        SNO VARCHAR(256),
        NAME VARCHAR(256) not null,
        REMARK VARCHAR(256),
        CUSTOMER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_CUST_PRODUCT (
        ID BIGINT generated by default as identity (start with 1),
        PRODUCT_CODE VARCHAR(256) not null,
        EQU_NAME VARCHAR(256) not null,
        PRODUCT_TYPE VARCHAR(256),
        MODEL VARCHAR(256),
        UNIT VARCHAR(256) not null,
        PRICE DOUBLE,
        WEIGHT DOUBLE,
        VOLUME DOUBLE,
        LEVEL VARCHAR(256),
        REQUEST VARCHAR(256),
        REMARK VARCHAR(256),
        CODE_I_D_FK BIGINT not null,
        PACK_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_FEE_LIST (
        ID BIGINT generated by default as identity (start with 1),
        MAKE_DATE DATETIME not null,
        AFFIRM_DATE DATETIME,
        START_DATE DATETIME,
        END_DATE DATETIME,
        CHARGE_DATE DATETIME,
        MANAGER_DATE DATETIME,
        APP_MANAGER_DATE DATETIME,
        STATE VARCHAR(256),
        REMARK VARCHAR(256),
        MAKE_PEOPLE_FK BIGINT not null,
        CUSTOMER_FK BIGINT not null,
        CHARGE_PEOPLE_FK BIGINT not null,
        APP_MANAGER_FK BIGINT not null,
        MANAGER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_FEE_ROW (
        ID BIGINT generated by default as identity (start with 1),
        CARRIAGE DOUBLE not null,
        AFFIRM_CARRIAGE DOUBLE not null,
        OTHER_FEE DOUBLE not null,
        AFFIRM_OTHER_FEE DOUBLE not null,
        STATE VARCHAR(256) not null,
        INVOICE_CODE VARCHAR(256),
        INVOICE_SORT VARCHAR(256),
        PRINT_TIME DATETIME,
        RECEIVE_TIME DATETIME,
        REMARK VARCHAR(256),
        FEE_LIST_FK BIGINT not null,
        ORDER_ROW_FK BIGINT not null,
        PRINTER_FK BIGINT not null,
        RECEIVER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_FILE_REGINFO (
        ID BIGINT generated by default as identity (start with 1),
        NAME VARCHAR(256) not null,
        SORT VARCHAR(256) not null,
        PARENT_FILE VARCHAR(256) not null,
        primary key (ID)
    );

    create table WL_INSURANCE (
        ID BIGINT generated by default as identity (start with 1),
        INSURE_CODE VARCHAR(256) not null,
        PROJECT VARCHAR(256) not null,
        INSURE VARCHAR(256) not null,
        ALLVALUE DOUBLE not null,
        SORT VARCHAR(256) not null,
        PROTECT_RATE DOUBLE not null,
        FACT_PROTECTRATE DOUBLE not null,
        BENEFICIARY VARCHAR(256) not null,
        ACCEPT_DATE TIME not null,
        ACCEPT_FEE DOUBLE not null,
        FACT_ACCEPT_FEE DOUBLE not null,
        INSURE_PLACE VARCHAR(256) not null,
        START_DATE TIME not null,
        END_DATE TIME not null,
        LIMITATION DOUBLE not null,
        CONTENT VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        ORDER_FK BIGINT not null,
        CUSTOMER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_LABORAGE (
        ID BIGINT generated by default as identity (start with 1),
        MONTH DATETIME not null,
        SEND_DATE DATETIME not null,
        ORDER_DATE DATETIME not null,
        ORDER_END_DATE DATETIME not null,
        BASE_VALUE DOUBLE not null,
        WELFARISM DOUBLE not null,
        TENANCY DOUBLE not null,
        REPAIR_FUN DOUBLE not null,
        INSURANCE_FEE DOUBLE not null,
        BRIDGE_ROUT_FEE DOUBLE not null,
        OIL_FEE DOUBLE not null,
        MOBILE_FEE DOUBLE not null,
        SALES_TAX DOUBLE not null,
        MOTORMAN_MONEY_OTHER DOUBLE not null,
        MANAGER_FEE DOUBLE not null,
        EVECTION_FEE DOUBLE not null,
        OTHER_FEE DOUBLE not null,
        PEOPLE_FEE DOUBLE not null,
        REPAIR_FEE DOUBLE not null,
        MOTORMAN_MONEY DOUBLE not null,
        MOD_OIL DOUBLE not null,
        MOTORMAN_INCOME DOUBLE not null,
        STATE VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        PEOPLE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_LOAN (
        ID BIGINT generated by default as identity (start with 1),
        APPLY_TIME DATETIME not null,
        PLAN_PAY_TIME DATETIME not null,
        PLAN_LOAN_FEE DOUBLE not null,
        FACT_LOAN_TIME DATETIME,
        FACT_LOAN_FEE DOUBLE not null,
        RETURN_TIME DATETIME,
        REMARK VARCHAR(256),
        BORROWER_FK BIGINT not null,
        RETURN_BOOKER_FK BIGINT not null,
        RETURNER_FK BIGINT not null,
        AGENT_FK BIGINT not null,
        TASK_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_LOCATION (
        ID BIGINT generated by default as identity (start with 1),
        LOCATION_NAME VARCHAR(256) not null,
        SEQUENCE VARCHAR(256) not null,
        STATE VARCHAR(256) not null,
        CONDITION VARCHAR(256) not null,
        LOCATION_USE VARCHAR(256) not null,
        LOCATION_TYPE VARCHAR(256) not null,
        LOCATION_ATTRIBUTE VARCHAR(256) not null,
        SHELF_AREA VARCHAR(256) not null,
        SORT_AREA VARCHAR(256) not null,
        RF_WORK_AREA VARCHAR(256) not null,
        LOCATION_GROUP1 VARCHAR(256) not null,
        LOCATION_GROUP2 VARCHAR(256) not null,
        ENTIRONMENT VARCHAR(256) not null,
        CYCLE VARCHAR(256) not null,
        LOCATION_DEAL VARCHAR(256) not null,
        COORDINATE_X DOUBLE not null,
        COORDINATE_Y DOUBLE not null,
        COORDINATE_Z DOUBLE not null,
        LAYER DOUBLE not null,
        LENGH DOUBLE not null,
        WIDTH DOUBLE not null,
        HIGH DOUBLE not null,
        STOCK_SUM DOUBLE not null,
        BULK_SUM DOUBLE not null,
        NUM_SUM DOUBLE not null,
        WEIGHT_SUM DOUBLE not null,
        PRODUCT VARCHAR(256) not null,
        NUMBER VARCHAR(256) not null,
        IGNORE_I_D VARCHAR(256) not null,
        primary key (ID)
    );

    create table WL_OPINION (
        ID BIGINT generated by default as identity (start with 1),
        TIME DATETIME,
        PLACE VARCHAR(256),
        ACCIDENT_DESCRIBE VARCHAR(256),
        BOOK_TIME DATETIME not null,
        SOLVE VARCHAR(256),
        LOSS_FEE DOUBLE,
        REMARK VARCHAR(256),
        TASK_ROW_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        BOOKER_FK BIGINT not null,
        REPORTER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_ORDER (
        ID BIGINT generated by default as identity (start with 1),
        CUSTOMER_ORDER_NO VARCHAR(256),
        CONTRACT_NO VARCHAR(256),
        CONVEYANCE VARCHAR(256) not null,
        CARRY_TYPE VARCHAR(256),
        SHIPPER_REMARK VARCHAR(256),
        CARRIER_REMARK VARCHAR(256),
        WLLEVEL VARCHAR(256),
        CUSTOMER_TYPE VARCHAR(256) not null,
        REFER_TIME DATETIME not null,
        LINK_MAN VARCHAR(256),
        TEL VARCHAR(256),
        BOOK_TIME DATETIME,
        COMPLETE_TIME DATETIME,
        FORM_STATE VARCHAR(256) not null,
        PLAN_FETCH_TIME DATETIME,
        FETCH_COMPANY_NAME VARCHAR(256),
        FETCH_COMPANY_ADDRESS VARCHAR(256),
        FETCH_MAN VARCHAR(256),
        FETCH_TEL VARCHAR(256),
        PLAN_UNLOAD_TIME DATETIME,
        UNLOAD_COMPANY_NAME VARCHAR(256),
        UNLOAD_COMPANY_ADDRESS VARCHAR(256),
        UNLOAD_MAN VARCHAR(256),
        UNLOAD_TEL VARCHAR(256),
        REMARK VARCHAR(256),
        PAY_COMPANY_FK BIGINT not null,
        FETCH_COMPANY_FK BIGINT not null,
        UNLOAD_COMPANY_FK BIGINT not null,
        CUSTOMER_FK BIGINT not null,
        BOOKER_FK BIGINT not null,
        WLOPERATOR_FK BIGINT not null,
        TASK_PEOPLE_FK BIGINT not null,
        PATH_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_ORDER_QUOTATION (
        ID BIGINT generated by default as identity (start with 1),
        FEE_TYPE VARCHAR(256) not null,
        SUM DOUBLE not null,
        REMARK VARCHAR(256),
        CONTRACT_FK BIGINT,
        ORDER_ROW_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_ORDER_ROW (
        ID BIGINT generated by default as identity (start with 1),
        PRODUCT_CODE VARCHAR(256),
        PRODUCT_NAME VARCHAR(256),
        PRODUCT_EQU_TYPE VARCHAR(256),
        MEASURE_UNIT VARCHAR(256) not null,
        PRODUCT_NUM DOUBLE,
        UNIT_NUM DOUBLE,
        GOODS_SUTTLE DOUBLE,
        GOODS_WEIGHT DOUBLE,
        GOODS_VOLUME DOUBLE,
        LABEL VARCHAR(256),
        CARRIAGE DOUBLE,
        ESPECIAL VARCHAR(256),
        GOODS_STATE VARCHAR(256) not null,
        STATUS VARCHAR(256) not null,
        VERSION DOUBLE not null,
        REMARK VARCHAR(256),
        ORDER_FK BIGINT not null,
        PRODUCT_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_PACK (
        ID BIGINT generated by default as identity (start with 1),
        PACK_NAME VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        MASTER_UNIT VARCHAR(256) not null,
        MASTER_UNIT_NUM DOUBLE not null,
        INNER_PACK VARCHAR(256) not null,
        INNER_PACK_NUM DOUBLE not null,
        BOX VARCHAR(256) not null,
        BOX_NUM DOUBLE not null,
        WAREHOUSE VARCHAR(256) not null,
        WAREHOUSE_NUM DOUBLE not null,
        OTHER VARCHAR(256) not null,
        OTHER_NUM DOUBLE not null,
        primary key (ID)
    );

    create table WL_PART (
        ID BIGINT generated by default as identity (start with 1),
        NAME VARCHAR(256) not null,
        PART_TYPE VARCHAR(256) not null,
        AMOUNT DOUBLE not null,
        UNIT VARCHAR(256) not null,
        PRICE DOUBLE not null,
        PART_CODE VARCHAR(256) not null,
        PART_MILES DOUBLE not null,
        REPAIR_ROW_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_PATH (
        ID BIGINT generated by default as identity (start with 1),
        PATH_NAME VARCHAR(256) not null,
        DISTANCE DOUBLE,
        LOAN_STANDARD DOUBLE,
        TIME DOUBLE,
        START_PLACE_FK BIGINT not null,
        END_PLACE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_PEOPLE_COST (
        ID BIGINT generated by default as identity (start with 1),
        START_DATE DATETIME not null,
        FILL_DATE DATETIME not null,
        AFFIRM_DATE DATETIME,
        COST_SUM DOUBLE not null,
        COST_SORT VARCHAR(256) not null,
        REMARK VARCHAR(256),
        FILLER_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        TASK_FK BIGINT,
        TASK_ROW_FK BIGINT,
        AFFIRMER_FK BIGINT,
        primary key (ID)
    );

    create table WL_PEO_PROVIDE (
        ID BIGINT generated by default as identity (start with 1),
        PROVIDE_DATE TIME not null,
        NEXT_PROVIDE_DATE TIME not null,
        PEOPLE_FK BIGINT not null,
        SIGN_PEOPLE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_PLACE (
        ID BIGINT generated by default as identity (start with 1),
        POST_CODE VARCHAR(256),
        PLACE_NAME VARCHAR(256) not null,
        PARENT_PLACE_ID BIGINT,
        PLACE_TYPE VARCHAR(256) not null,
        TRAFFICE_GRADE VARCHAR(256),
        REMARK VARCHAR(256),
        primary key (ID)
    );

    create table WL_QUOTATION (
        ID BIGINT generated by default as identity (start with 1),
        TRAFFIC_WAY VARCHAR(256),
        RECEIVE_TYPE VARCHAR(256) not null,
        TRANSPORT_TYPE VARCHAR(256) not null,
        FEE_TYPE VARCHAR(256) not null,
        GOODS_GRADE VARCHAR(256) not null,
        BEGIN_PRICE DOUBLE not null,
        COUNT_STANDER VARCHAR(256),
        LOWER_LIMIT DOUBLE not null,
        UPPER_LIMIT DOUBLE not null,
        UNIT_PRICE DOUBLE not null,
        FILES_STATE VARCHAR(256) not null,
        REMARK VARCHAR(256),
        CONTRACT_FK BIGINT not null,
        PATH_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_REPAIR_ROW (
        ID BIGINT generated by default as identity (start with 1),
        STATUS VARCHAR(256) not null,
        FILL_DATE DATETIME not null,
        FORM_TYPE VARCHAR(256) not null,
        REPAIR_GRADE VARCHAR(256) not null,
        TROUBLE_DESCRIPTION VARCHAR(256) not null,
        TASKER VARCHAR(256) not null,
        TEL VARCHAR(256) not null,
        START_DATE DOUBLE not null,
        END_DATE DATETIME not null,
        PARKING_TIME DOUBLE not null,
        USE_TIME DOUBLE not null,
        ADVICE VARCHAR(256) not null,
        PLAN_SALARY DOUBLE not null,
        FACT_SALARY DOUBLE not null,
        PLAN_MATERIAL_FEE DOUBLE not null,
        FACT_MATERIAL_FEE DOUBLE not null,
        RESOLVENT VARCHAR(256) not null,
        CHECK_RESULT VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        VOITURE_FK BIGINT not null,
        FILL_PEOPLE_FK BIGINT not null,
        REPAIR_MAN_FK BIGINT not null,
        REPAIR_CUSTOMER_FK BIGINT not null,
        CHECKER_FK BIGINT not null,
        PLACE_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_STEER_ROW (
        ID BIGINT generated by default as identity (start with 1),
        TIME DATETIME not null,
        PLACE_NAME VARCHAR(256) not null,
        STATE VARCHAR(256) not null,
        MILES DOUBLE not null,
        BOOK_TIME DATETIME not null,
        REMARK VARCHAR(256),
        TASK_FK BIGINT not null,
        VOITURE_FK BIGINT not null,
        PLACE_FK BIGINT not null,
        BOOKER_FK BIGINT not null,
        REPORTER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_STORE_ZONE (
        ID BIGINT generated by default as identity (start with 1),
        ZONE_NAME VARCHAR(256) not null,
        SUBAREA VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        CONDITION VARCHAR(256) not null,
        TRANSITION VARCHAR(256) not null,
        primary key (ID)
    );

    create table WL_TASK (
        ID BIGINT generated by default as identity (start with 1),
        CREATE_TIME DATETIME not null,
        SEND_TIME DATETIME not null,
        OVER_TIME DATETIME not null,
        REMARK VARCHAR(256) not null,
        MANAGER_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_TASK_ROW (
        ID BIGINT generated by default as identity (start with 1),
        TASK_TYPE VARCHAR(256) not null,
        PLAN_FETCH_TIME DATETIME not null,
        FETCH_UNIT_ADDRESS VARCHAR(256) not null,
        FETCH_MAN VARCHAR(256) not null,
        FETCH_TEL VARCHAR(256) not null,
        PLAN_UNLOAD_TIME DATETIME not null,
        UNLOAD_UNIT_ADDRESS VARCHAR(256) not null,
        UNLOAD_MAN VARCHAR(256) not null,
        UNLOAD_TEL VARCHAR(256) not null,
        DRIVER_TEL VARCHAR(256) not null,
        FOLLOWER VARCHAR(256),
        PLAN_BACK_TIME DATETIME,
        ARRIVE_FETCH_TIME DATETIME,
        START_FETCH_TIME DATETIME,
        END_FETCH_TIME DATETIME,
        ARRIVE_UNLOAD_TIME DATETIME,
        START_UNLOAD_TIME DATETIME,
        END_UNLOAD_TIME DATETIME,
        TRUE_OR_FALSE VARCHAR(256),
        RETURN_DATE DATETIME,
        STATUS VARCHAR(256) not null,
        REMARK VARCHAR(256),
        TASK_FK BIGINT not null,
        FETCH_UNIT_FK BIGINT not null,
        UNLOAD_UNIT_FK BIGINT not null,
        MASTER_DRIVER_FK BIGINT not null,
        ASSIST_DRIVER_FK BIGINT,
        VOITURE_FK BIGINT not null,
        PATH_FK BIGINT not null,
        primary key (ID)
    );

    create table WL_TASK_ROW_COST (
        ID BIGINT generated by default as identity (start with 1),
        START_DATE DATETIME not null,
        FILL_DATE DATETIME not null,
        AFFIRM_DATE DATETIME,
        COST DOUBLE not null,
        COST_SORT VARCHAR(256) not null,
        REMARK VARCHAR(256),
        TASK_ROW_FK BIGINT not null,
        FILLER_FK BIGINT not null,
        AFFIRMER_FK BIGINT ,
        primary key (ID)
    );
insert into WL_TASK_ROW_COST values(1,curtime(),curtime(),curtime(),100,'cost_sort','REMARK',5,1,1);
    create table WL_VOITURE (
        ID BIGINT generated by default as identity (start with 1),
        LICENSE VARCHAR(256) not null,
        MANUFACTURER VARCHAR(256) not null,
        OLD_MODEL VARCHAR(256),
        ENGINE_CODE VARCHAR(256) not null,
        BODY_CODE VARCHAR(256) not null,
        BIRTHDAY DATETIME not null,
        REGISTER_DAY DATETIME,
        LOAD DOUBLE not null,
        SELF_WEIGHT DOUBLE,
        OUT_LENGTH DOUBLE,
        IN_LENGTH DOUBLE,
        OUT_WIDTH DOUBLE,
        IN_WIDTH DOUBLE,
        OUT_HEIGHT DOUBLE,
        IN_HEIGHT DOUBLE,
        COLOUR VARCHAR(256),
        VOITURE_TYPE VARCHAR(256) not null,
        TYRE_TYPE VARCHAR(256) not null,
        PIN VARCHAR(256),
        COUNTRY VARCHAR(256) not null,
        TYPE_V VARCHAR(256) not null,
        INITVALUE DOUBLE not null,
        REMARK VARCHAR(256),
        STATUS VARCHAR(256) not null,
        MASTER_DRIVER_FK BIGINT not null,
        DEPART_FK BIGINT not null,
        primary key (ID)
    );

    create table WZ_ACCEPT_FORM (
        ID BIGINT generated by default as identity (start with 1),
        TIME TIME not null,
        SORT VARCHAR(256) not null,
        CLIENT_TYPE VARCHAR(256) not null,
        STATUS_I_D VARCHAR(256) not null,
        IS_EXAM VARCHAR(256) not null,
        PEOPLE_FK BIGINT not null,
        ACCEPTOR_FK BIGINT not null,
        TRANSFER_FK BIGINT not null,
        primary key (ID)
    );

    create table WZ_ARRIVE_FLOW (
        ID BIGINT generated by default as identity (start with 1),
        TASK_ROW_I_DS VARCHAR(256) not null,
        INFORME_AMOUNT DOUBLE not null,
        ARRIVE_AMOUNT DOUBLE not null,
        ARRIVE_TIME TIME not null,
        ACCEPT_RETURN_AMOUNT DOUBLE not null,
        ACCEPT_RETURN_REASON VARCHAR(256) not null,
        QUALIFIED_AMOUNT DOUBLE not null,
        UNQUALIFIED_AMOUNT DOUBLE not null,
        RETURN_AMOUNT DOUBLE not null,
        ENTRY_TIME TIME not null,
        ENTRY_AMOUNT DOUBLE not null,
        PRESENT_AMOUNT DOUBLE not null,
        PRACTICE_PRICE DOUBLE not null,
        DISCOUNT_PRICE DOUBLE not null,
        TRANS_FEE DOUBLE not null,
        MANAGE_FEE DOUBLE not null,
        SALE_PRICE DOUBLE not null,
        OTHER VARCHAR(256) not null,
        ENTRY_TYPE VARCHAR(256) not null,
        EXAM_STYLE VARCHAR(256) not null,
        EXAM_AMOUNT DOUBLE not null,
        STATUS_I_D VARCHAR(256) not null,
        PACK_FK BIGINT not null,
        LOCATION_FK BIGINT not null,
        ORDERFLOW_FK BIGINT not null,
        CUST_PRODUCT_FK BIGINT not null,
        primary key (ID)
    );

    create table WZ_FETCH_FLOW (
        ID BIGINT generated by default as identity (start with 1),
        NEED_FLOW_I_D_TF BIGINT not null,
        ARRIVE_FLOW_I_D BIGINT not null,
        PRESENT_AMOUNT DOUBLE not null,
        PRICE DOUBLE not null,
        FETCH_TYPE VARCHAR(256) not null,
        FETCHER VARCHAR(256) not null,
        TIME TIME not null,
        STATUS VARCHAR(256) not null,
        OTHER VARCHAR(256) not null,
        FETCHFORM_FK BIGINT not null,
        CUST_PRODUCT_FK BIGINT not null,
        primary key (ID)
    );

    create table WZ_FETCH_FORM (
        ID BIGINT generated by default as identity (start with 1),
        PROJECT_I_D VARCHAR(256) not null,
        TIME VARCHAR(256) not null,
        FETCH_TYPE VARCHAR(256) not null,
        PURPOSE VARCHAR(256) not null,
        SORT VARCHAR(256) not null,
        STATUS VARCHAR(256) not null,
        REMARK VARCHAR(256) not null,
        DEPART_FK BIGINT not null,
        PEOPLE_FK BIGINT not null,
        FETCHER_FK BIGINT not null,
        primary key (ID)
    );

    alter table ORGA_PEOPLE 
        add constraint ORGA_PEOPLE_ORGA_FKC 
        foreign key (ORGA_FK) 
        references ORGA_INFO;

    alter table ORGA_PEOPLE 
        add constraint ORGA_PEOPLE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table PEOPLE_ROLE 
        add constraint PEOPLE_ROLE_ROLE_FKC 
        foreign key (ROLE_FK) 
        references ROLE_INFO;

    alter table PEOPLE_ROLE 
        add constraint PEOPLE_ROLE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table ROLE_OPERATE 
        add constraint ROLE_OPERATE_ROLE_FKC 
        foreign key (ROLE_FK) 
        references ROLE_INFO;

    alter table ROLE_OPERATE 
        add constraint ROLE_OPERATE_HANDLE_FKC 
        foreign key (HANDLE_FK) 
        references HANDLE_INFO;

    alter table WLTRWITHOR 
        add constraint WLTRWITHOR_ORDER_ROW_FKC 
        foreign key (ORDER_ROW_FK) 
        references WL_ORDER_ROW;

    alter table WLTRWITHOR 
        add constraint WLTRWITHOR_TASK_ROW_FKC 
        foreign key (TASK_ROW_FK) 
        references WL_TASK_ROW;

    alter table WL_ACCIDENT 
        add constraint WL_ACCIDENT_BREAKER_FKC 
        foreign key (BREAKER_FK) 
        references PEOPLE;

    alter table WL_ACCIDENT 
        add constraint WL_ACCIDENT_BOOKER_FKC 
        foreign key (BOOKER_FK) 
        references PEOPLE;

    alter table WL_ACCIDENT 
        add constraint WL_ACCIDENT_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_ACCIDENT 
        add constraint WL_ACCIDENT_REPORTER_FKC 
        foreign key (REPORTER_FK) 
        references PEOPLE;

    alter table WL_CARD 
        add constraint WL_CARD_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_CARRY_COST 
        add constraint WL_CARRY_COST_AFFIRMER_FKC 
        foreign key (AFFIRMER_FK) 
        references PEOPLE;

    alter table WL_CARRY_COST 
        add constraint WL_CARRY_COST_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_CARRY_COST 
        add constraint WL_CARRY_COST_START_STEER_ROWC 
        foreign key (START_STEER_ROW_FK) 
        references WL_STEER_ROW;

    alter table WL_CARRY_COST 
        add constraint WL_CARRY_COST_FILLER_FKC 
        foreign key (FILLER_FK) 
        references PEOPLE;

    alter table WL_CERTIFICATE 
        add constraint WL_CERTIFICATE_OWNER_FKC 
        foreign key (OWNER_FK) 
        references WL_CUSTOMER;

    alter table WL_CERTIFICATE 
        add constraint WL_CERTIFICATE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_COMPENSATE 
        add constraint WL_COMPENSATE_TASK_ROW_FKC 
        foreign key (TASK_ROW_FK) 
        references WL_TASK_ROW;

    alter table WL_COMPENSATE 
        add constraint WL_COMPENSATE_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_COMPENSATE 
        add constraint WL_COMPENSATE_ORDER_FKC 
        foreign key (ORDER_FK) 
        references WL_ORDER;

    alter table WL_COMPENSATE 
        add constraint WL_COMPENSATE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_CONTRACT 
        add constraint WL_CONTRACT_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_CONTRACT 
        add constraint WL_CONTRACT_DEP_FKC 
        foreign key (DEP_FK) 
        references ORGA_INFO;

    alter table WL_CONTRACT 
        add constraint WL_CONTRACT_ORDER_CODE_FKC 
        foreign key (ORDER_CODE_FK) 
        references WL_ORDER;

    alter table WL_CONTRACT 
        add constraint WL_CONTRACT_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_CUSTOMER 
        add constraint WL_CUSTOMER_PLACE_FKC 
        foreign key (PLACE_FK) 
        references WL_PLACE;

    alter table WL_CUSTOMER 
        add constraint WL_CUSTOMER_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_CUST_CODE 
        add constraint WL_CUST_CODE_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_CUST_PRODUCT 
        add constraint WL_CUST_PRODUCT_CODE_I_D_FKC 
        foreign key (CODE_I_D_FK) 
        references WL_CUST_CODE;

    alter table WL_CUST_PRODUCT 
        add constraint WL_CUST_PRODUCT_PACK_FKC 
        foreign key (PACK_FK) 
        references WL_PACK;

    alter table WL_FEE_LIST 
        add constraint WL_FEE_LIST_APP_MANAGER_FKC 
        foreign key (APP_MANAGER_FK) 
        references PEOPLE;

    alter table WL_FEE_LIST 
        add constraint WL_FEE_LIST_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_FEE_LIST 
        add constraint WL_FEE_LIST_MAKE_PEOPLE_FKC 
        foreign key (MAKE_PEOPLE_FK) 
        references PEOPLE;

    alter table WL_FEE_LIST 
        add constraint WL_FEE_LIST_MANAGER_FKC 
        foreign key (MANAGER_FK) 
        references PEOPLE;

    alter table WL_FEE_LIST 
        add constraint WL_FEE_LIST_CHARGE_PEOPLE_FKC 
        foreign key (CHARGE_PEOPLE_FK) 
        references PEOPLE;

    alter table WL_FEE_ROW 
        add constraint WL_FEE_ROW_PRINTER_FKC 
        foreign key (PRINTER_FK) 
        references PEOPLE;

    alter table WL_FEE_ROW 
        add constraint WL_FEE_ROW_ORDER_ROW_FKC 
        foreign key (ORDER_ROW_FK) 
        references WL_ORDER_ROW;

    alter table WL_FEE_ROW 
        add constraint WL_FEE_ROW_RECEIVER_FKC 
        foreign key (RECEIVER_FK) 
        references PEOPLE;

    alter table WL_FEE_ROW 
        add constraint WL_FEE_ROW_FEE_LIST_FKC 
        foreign key (FEE_LIST_FK) 
        references WL_FEE_LIST;

    alter table WL_INSURANCE 
        add constraint WL_INSURANCE_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_INSURANCE 
        add constraint WL_INSURANCE_ORDER_FKC 
        foreign key (ORDER_FK) 
        references WL_ORDER;

    alter table WL_LABORAGE 
        add constraint WL_LABORAGE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_LOAN 
        add constraint WL_LOAN_RETURN_BOOKER_FKC 
        foreign key (RETURN_BOOKER_FK) 
        references PEOPLE;

    alter table WL_LOAN 
        add constraint WL_LOAN_BORROWER_FKC 
        foreign key (BORROWER_FK) 
        references PEOPLE;

    alter table WL_LOAN 
        add constraint WL_LOAN_RETURNER_FKC 
        foreign key (RETURNER_FK) 
        references PEOPLE;

    alter table WL_LOAN 
        add constraint WL_LOAN_TASK_FKC 
        foreign key (TASK_FK) 
        references WL_TASK;

    alter table WL_LOAN 
        add constraint WL_LOAN_AGENT_FKC 
        foreign key (AGENT_FK) 
        references PEOPLE;

    alter table WL_OPINION 
        add constraint WL_OPINION_TASK_ROW_FKC 
        foreign key (TASK_ROW_FK) 
        references WL_TASK_ROW;

    alter table WL_OPINION 
        add constraint WL_OPINION_BOOKER_FKC 
        foreign key (BOOKER_FK) 
        references PEOPLE;

    alter table WL_OPINION 
        add constraint WL_OPINION_REPORTER_FKC 
        foreign key (REPORTER_FK) 
        references PEOPLE;

    alter table WL_OPINION 
        add constraint WL_OPINION_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_ORDER 
        add constraint WL_ORDER_BOOKER_FKC 
        foreign key (BOOKER_FK) 
        references PEOPLE;

    alter table WL_ORDER 
        add constraint WL_ORDER_CUSTOMER_FKC 
        foreign key (CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_ORDER 
        add constraint WL_ORDER_PATH_FKC 
        foreign key (PATH_FK) 
        references WL_PATH;

    alter table WL_ORDER 
        add constraint WL_ORDER_TASK_PEOPLE_FKC 
        foreign key (TASK_PEOPLE_FK) 
        references PEOPLE;

    alter table WL_ORDER 
        add constraint WL_ORDER_UNLOAD_COMPANY_FKC 
        foreign key (UNLOAD_COMPANY_FK) 
        references WL_CUSTOMER;

    alter table WL_ORDER 
        add constraint WL_ORDER_FETCH_COMPANY_FKC 
        foreign key (FETCH_COMPANY_FK) 
        references WL_CUSTOMER;

    alter table WL_ORDER 
        add constraint WL_ORDER_PAY_COMPANY_FKC 
        foreign key (PAY_COMPANY_FK) 
        references WL_CUSTOMER;

    alter table WL_ORDER 
        add constraint WL_ORDER_WLOPERATOR_FKC 
        foreign key (WLOPERATOR_FK) 
        references PEOPLE;

    alter table WL_ORDER_QUOTATION 
        add constraint WL_ORDER_QUOTATION_ORDER_ROW_C 
        foreign key (ORDER_ROW_FK) 
        references WL_ORDER_ROW;

    alter table WL_ORDER_QUOTATION 
        add constraint WL_ORDER_QUOTATION_CONTRACT_FC 
        foreign key (CONTRACT_FK) 
        references WL_CONTRACT;

    alter table WL_ORDER_ROW 
        add constraint WL_ORDER_ROW_ORDER_FKC 
        foreign key (ORDER_FK) 
        references WL_ORDER;

    alter table WL_ORDER_ROW 
        add constraint WL_ORDER_ROW_PRODUCT_FKC 
        foreign key (PRODUCT_FK) 
        references WL_CUST_PRODUCT;

    alter table WL_PART 
        add constraint WL_PART_REPAIR_ROW_FKC 
        foreign key (REPAIR_ROW_FK) 
        references WL_REPAIR_ROW;

    alter table WL_PATH 
        add constraint WL_PATH_END_PLACE_FKC 
        foreign key (END_PLACE_FK) 
        references WL_PLACE;

    alter table WL_PATH 
        add constraint WL_PATH_START_PLACE_FKC 
        foreign key (START_PLACE_FK) 
        references WL_PLACE;

    alter table WL_PEOPLE_COST 
        add constraint WL_PEOPLE_COST_AFFIRMER_FKC 
        foreign key (AFFIRMER_FK) 
        references PEOPLE;

    alter table WL_PEOPLE_COST 
        add constraint WL_PEOPLE_COST_TASK_ROW_FKC 
        foreign key (TASK_ROW_FK) 
        references WL_TASK_ROW;

    alter table WL_PEOPLE_COST 
        add constraint WL_PEOPLE_COST_TASK_FKC 
        foreign key (TASK_FK) 
        references WL_TASK;

    alter table WL_PEOPLE_COST 
        add constraint WL_PEOPLE_COST_FILLER_FKC 
        foreign key (FILLER_FK) 
        references PEOPLE;

    alter table WL_PEOPLE_COST 
        add constraint WL_PEOPLE_COST_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_PEO_PROVIDE 
        add constraint WL_PEO_PROVIDE_SIGN_PEOPLE_FKC 
        foreign key (SIGN_PEOPLE_FK) 
        references PEOPLE;

    alter table WL_PEO_PROVIDE 
        add constraint WL_PEO_PROVIDE_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WL_QUOTATION 
        add constraint WL_QUOTATION_CONTRACT_FKC 
        foreign key (CONTRACT_FK) 
        references WL_CONTRACT;

    alter table WL_QUOTATION 
        add constraint WL_QUOTATION_PATH_FKC 
        foreign key (PATH_FK) 
        references WL_PATH;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_REPAIR_CUSTOMERC 
        foreign key (REPAIR_CUSTOMER_FK) 
        references WL_CUSTOMER;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_CHECKER_FKC 
        foreign key (CHECKER_FK) 
        references PEOPLE;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_REPAIR_MAN_FKC 
        foreign key (REPAIR_MAN_FK) 
        references PEOPLE;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_FILL_PEOPLE_FKC 
        foreign key (FILL_PEOPLE_FK) 
        references PEOPLE;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_REPAIR_ROW 
        add constraint WL_REPAIR_ROW_PLACE_FKC 
        foreign key (PLACE_FK) 
        references WL_PLACE;

    alter table WL_STEER_ROW 
        add constraint WL_STEER_ROW_BOOKER_FKC 
        foreign key (BOOKER_FK) 
        references PEOPLE;

    alter table WL_STEER_ROW 
        add constraint WL_STEER_ROW_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_STEER_ROW 
        add constraint WL_STEER_ROW_TASK_FKC 
        foreign key (TASK_FK) 
        references WL_TASK;

    alter table WL_STEER_ROW 
        add constraint WL_STEER_ROW_PLACE_FKC 
        foreign key (PLACE_FK) 
        references WL_PLACE;

    alter table WL_STEER_ROW 
        add constraint WL_STEER_ROW_REPORTER_FKC 
        foreign key (REPORTER_FK) 
        references PEOPLE;

    alter table WL_TASK 
        add constraint WL_TASK_MANAGER_FKC 
        foreign key (MANAGER_FK) 
        references PEOPLE;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_UNLOAD_UNIT_FKC 
        foreign key (UNLOAD_UNIT_FK) 
        references WL_CUSTOMER;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_FETCH_UNIT_FKC 
        foreign key (FETCH_UNIT_FK) 
        references WL_CUSTOMER;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_PATH_FKC 
        foreign key (PATH_FK) 
        references WL_PATH;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_VOITURE_FKC 
        foreign key (VOITURE_FK) 
        references WL_VOITURE;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_TASK_FKC 
        foreign key (TASK_FK) 
        references WL_TASK;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_MASTER_DRIVER_FKC 
        foreign key (MASTER_DRIVER_FK) 
        references PEOPLE;

    alter table WL_TASK_ROW 
        add constraint WL_TASK_ROW_ASSIST_DRIVER_FKC 
        foreign key (ASSIST_DRIVER_FK) 
        references PEOPLE;

    alter table WL_TASK_ROW_COST 
        add constraint WL_TASK_ROW_COST_AFFIRMER_FKC 
        foreign key (AFFIRMER_FK) 
        references PEOPLE;

    alter table WL_TASK_ROW_COST 
        add constraint WL_TASK_ROW_COST_TASK_ROW_FKC 
        foreign key (TASK_ROW_FK) 
        references WL_TASK_ROW;

    alter table WL_TASK_ROW_COST 
        add constraint WL_TASK_ROW_COST_FILLER_FKC 
        foreign key (FILLER_FK) 
        references PEOPLE;

    alter table WL_VOITURE 
        add constraint WL_VOITURE_DEPART_FKC 
        foreign key (DEPART_FK) 
        references ORGA_INFO;

    alter table WL_VOITURE 
        add constraint WL_VOITURE_MASTER_DRIVER_FKC 
        foreign key (MASTER_DRIVER_FK) 
        references PEOPLE;

    alter table WZ_ACCEPT_FORM 
        add constraint WZ_ACCEPT_FORM_ACCEPTOR_FKC 
        foreign key (ACCEPTOR_FK) 
        references PEOPLE;

    alter table WZ_ACCEPT_FORM 
        add constraint WZ_ACCEPT_FORM_TRANSFER_FKC 
        foreign key (TRANSFER_FK) 
        references PEOPLE;

    alter table WZ_ACCEPT_FORM 
        add constraint WZ_ACCEPT_FORM_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;

    alter table WZ_ARRIVE_FLOW 
        add constraint WZ_ARRIVE_FLOW_LOCATION_FKC 
        foreign key (LOCATION_FK) 
        references WL_LOCATION;

    alter table WZ_ARRIVE_FLOW 
        add constraint WZ_ARRIVE_FLOW_CUST_PRODUCT_FC 
        foreign key (CUST_PRODUCT_FK) 
        references WL_CUST_PRODUCT;

    alter table WZ_ARRIVE_FLOW 
        add constraint WZ_ARRIVE_FLOW_ORDERFLOW_FKC 
        foreign key (ORDERFLOW_FK) 
        references WL_ORDER_ROW;

    alter table WZ_ARRIVE_FLOW 
        add constraint WZ_ARRIVE_FLOW_PACK_FKC 
        foreign key (PACK_FK) 
        references WL_PACK;

    alter table WZ_FETCH_FLOW 
        add constraint WZ_FETCH_FLOW_CUST_PRODUCT_FKC 
        foreign key (CUST_PRODUCT_FK) 
        references WL_CUST_PRODUCT;

    alter table WZ_FETCH_FLOW 
        add constraint WZ_FETCH_FLOW_FETCHFORM_FKC 
        foreign key (FETCHFORM_FK) 
        references WZ_FETCH_FORM;

    alter table WZ_FETCH_FORM 
        add constraint WZ_FETCH_FORM_FETCHER_FKC 
        foreign key (FETCHER_FK) 
        references PEOPLE;

    alter table WZ_FETCH_FORM 
        add constraint WZ_FETCH_FORM_DEPART_FKC 
        foreign key (DEPART_FK) 
        references ORGA_INFO;

    alter table WZ_FETCH_FORM 
        add constraint WZ_FETCH_FORM_PEOPLE_FKC 
        foreign key (PEOPLE_FK) 
        references PEOPLE;
