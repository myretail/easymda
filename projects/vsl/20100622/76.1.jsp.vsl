#set ($iftree= 0)
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name == 'parentId')
		#set ($iftree= 1)
	#end
#end		
#if($iftree == 1)
#set($di=${stringUtils.replace(${manageable.packageName},"entity.","")})
#set($filePath=${stringUtils.replace($di,".","/")})
#set($filePath = "${filePath}/76${manageable.name}.jsp")
<%
String peopleId = request.getParameter("peopleId");
%>
<html>
<head> 
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title></title>
     <style type="text/css">
            @import "../dojo/dojo-release-1.0.0/dijit/themes/tundra/tundra.css";
            @import "../dojo/dojo-release-1.0.0/dojo/resources/dojo.css";
            @import "../dojo/dojo-release-1.0.0/dojox/grid/_grid/tundraGrid.css";
            @import "../dojo/dojo-release-1.0.0/dojox/grid/_grid/Grid.css";
            @import "../js/dijitTests.css";
            @import "../js/wlProject.css";
			@import "../dojo/dojo-release-1.0.0/dojox/layout/resources/FloatingPane.css"; 
		    @import "../dojo/dojo-release-1.0.0/dojox/layout/resources/ResizeHandle.css"; 
			@import "../dojo/dojo-release-1.0.0/dojox/layout/tests/_expando.css"; 
      </style>
      <script type="text/javascript" src="../dojo/dojo-release-1.0.0/dojo/dojo.js"  
                djConfig="parseOnLoad: true, isDebug: true,locale: 'zh-cn', extraLocale: ['zh-TW', 'fr']"></script>
      <script>
    
            dojo.require("dojo.data.ItemFileWriteStore");
            dojo.require("dojo.parser");
            dojo.require("dijit.form.Button");
			dojo.require("dojox.layout.FloatingPane");
			dojo.require("dijit.layout.TabContainer");
			dojo.require("dijit.layout.BorderContainer");
			dojo.require("dijit.layout.ContentPane");
			dojo.require("dojox.layout.ExpandoPane");
            dojo.require("dijit.Menu");
			dojo.require("dijit.Tree");
            dojo.require("dojox.grid.Grid");
            dojo.require("dojox.validate._base");
            dojo.require("dojox.grid._data.model");
            dojo.require("dijit.form.ValidationTextBox");
            dojo.require("dijit.form.TextBox");
            dojo.require("dijit.form.FilteringSelect");
            dojo.require("dijit.form.ComboBox");
            dojo.require("dijit.form.Textarea");
            dojo.require("dojox.grid._data.dijitEditors");
            dojo.registerModulePath("mydojo", "../../../js/mydojo");
            dojo.require("mydojo.FilteringSelect");
            dojo.require("mydojo.ValidationTextBox");
            dojo.require("mydojo.NumberTextBox");
     </script>
		        
     <script type="text/javascript" src="../js/soapclient.js"></script>
     <script type="text/javascript" src="../js/wlProject.js"></script>
     <script type="text/javascript" src="../js/myi18n.js"></script>
	 <script type="text/javascript" src="../js/${manageable.name}.js"></script>
	  #foreach ($associatedClass in $manageable.allAssociatedClasses)
 <script type="text/javascript" src="../js/${associatedClass.name}.js"></script>
 #end
	 #foreach($member in $manageable.manageableAssociationEnds)
		<script type="text/javascript" src="../js/${member.type.name}.js"></script>
	 #end
 #foreach($member in $manageable.AssociationEnds)
	#if(!${member.many})
		#set($dai = ${stringUtils.lastIndexOf(${member.otherEnd.type.packageName}, 'entity.')} + 6)
		#set($dap = ${stringUtils.substring(${member.otherEnd.type.packageName}, $dai)})
		<script type="text/javascript" src="..${stringUtils.replace($dap,'.','/')}/${member.association.name}TreeRightCrudAFTab.js"></script>
	#end
 #end
 #foreach($member in $manageable.manageableAssociationEnds)
	#if(${member.many})
		#set ($ifMain = 1) 
		<script type="text/javascript" src="${member.name}.js"></script><!--sub Table script    eg:taskRow.js    判断是否为主表，且初始化子表的行数childRow=0-->
	#end	
#end
	<script type="text/javascript" >
	  var url${manageable.name} = getUrl()+ "services/${manageable.name}ManageService";
	  var deletedata${manageable.name} =  new Array();
	  var querydata${manageable.name} =  new Array();
	  var pagenumber${manageable.name}=1;
	  var totalCount${manageable.name}=0;
	  var pagesize${manageable.name}=10;
	  var orderBy${manageable.name}='0';
	  var queryvo${manageable.name}=new ${manageable.name}VOJs();
	  var oddstyle='';
	  var model${manageable.name} = new dojox.grid.data.Table(null, querydata${manageable.name});
	  var urle = getUrl()+ "services/BasicManageService";    
//------begin--------for tree----------------
	var selectNode;
	var data =new Array();
	var poptarts ={ label:'name',identifier:'eId',items:data};
	var popStore = new dojo.data.ItemFileWriteStore({data: poptarts});
	var treeModel = new dijit.tree.ForestStoreModel({
  				store: popStore,
  				rootId: "root",
  				rootLabel: "",
  				childrenAttrs: ["children"]
  			});
	
	function addTreeNode(pid,nodeName,nodeType,id){
               var pInfo = {
								parent: (pid.item.root? null:pid.item),		
								attribute: "children"	
							};
               popStore.newItem({name: nodeName,type:nodeType ,eId:id,haveChild:"0"}, pInfo);
    }  
    
	function delTreeNode(id){
		var node = dijit.byId("tree")._itemNodeMap[id];
		popStore.deleteItem(node.item);//同时删除所有子节点
	  }  
	  
	function setTreeNode(id,nodeName,nodeType){
		var node = dijit.byId("tree")._itemNodeMap[id];
		popStore.setValue(node.item,"name",nodeName);         
		popStore.setValue(node.item,"type",nodeType);      
		node.setLabelNode(nodeName);
	}  
    
	function getTreeNodes(queryvo${manageable.name},chitem,layerInt,layerSum){//首层layerInt=0   (0,1,null,0,2);
	
             var pl = new SOAPClientParameters2();
             pl.add('${manageable.name}VO',queryvo${manageable.name}) ;
             pl.add('pageNumber',pagenumber${manageable.name}) ;
             pl.add('pageSize',pagesize${manageable.name}) ;
             pl.add('orderBy',orderBy${manageable.name}) ;
             SOAPClient.invoke(url${manageable.name}, "get${manageable.name}", pl, false,  function GetEnu_callBack(ul, soapResponse){
               var pInfo = {
                   					parent: chitem,		
                   					attribute: "children"	
                   		};
               if(ul!=null && ul.length-1>0 ){
                     var tempArr=${manageable.name}VOtoArray_fun(ul,false);
                     for(var i = 0; i < ul.length-1; i++){		
                                  var ulo=ul[i];
								  var newitem=popStore.newItem({name: tempArr[i][2],type:ulo["ns:parentId"] ,eId:ulo["ns:id"],haveChild:"0"}, pInfo);				//haveChild=0初始，1有子结点，2无子结点
                                  queryvo${manageable.name}=new ${manageable.name}VOJs();
								  queryvo${manageable.name}.parentId=ulo["ns:id"];
								  if(layerInt<layerSum)getTreeNodes(queryvo${manageable.name},newitem,layerInt+1,layerSum);
                            }
                      if(chitem!=null){
                            popStore.setValue(chitem,"haveChild","1"); 
                            var node = dijit.byId("tree")._itemNodeMap[chitem.eId];
                            node._updateItemClasses(node.item);
                      }
                }else{
                    popStore.setValue(chitem,"haveChild","2");  
                }       
          });
        
        }
	function expandAllChildrenNode(tree,treeNode,layerInt,layerSum){
		  tree._expandNode(treeNode);
          var childrenArray=treeNode.getChildren();
          for (var i=0; i<childrenArray.length; i++){	
             if(layerInt<layerSum) expandAllChildrenNode(tree,childrenArray[i],layerInt+1,layerSum);
             if(layerInt==layerSum)childrenArray[i]._updateItemClasses(childrenArray[i].item);
          }
	}  	
//--end -----for tree------------------------------
	
	function call_funUpd${manageable.name}() {
       //var s = grid.selection.getSelected();
       //var  d=new DateTimeQuery();
       //var n=new NumberQuery();
       var sall=grid${manageable.name}.model.data;
       for(var i=0;i<sall.length;i++){
       if(sall[i][0]==true){
         var passAll=0;
         var thisCell=sall[i];
         var padd = new SOAPClientParameters2();
         var vobject=new ${manageable.name}VOJs();
         vobject.id=thisCell[1];
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
	#if (${member.name} != 'parentId' )
             if(dojox.validate.isInRange(thisCell[$inum],{max:9999999, min:0})){
              var  n=new NumberQuery(); n.upNumber=thisCell[$inum];vobject.$member.name=n;
             }else{grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}> not be double</span>";passAll=1;}//double
	#end		 
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')
 var  d=new DateTimeQuery();
             if(thisCell[$inum] instanceof Date){ d.upDate=dojo.date.locale.format(thisCell[$inum], grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).constraint);
             }else{grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be date</span>"; passAll=1;}//not null
 #set ($inum= $inum + 1) 
             if(thisCell[$inum] instanceof Date){
             d.upDate=d.upDate+" "+dojo.date.locale.format(thisCell[$inum], grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).constraint);
             vobject.$member.name=d;
             }else{grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be time</span>"; passAll=1;}//not null

#else        
 #if ($member.required)
             if(dojox.validate.isText(thisCell[$inum], {minlength: 1})){vobject.$member.name=thisCell[$inum];
             }else{grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;}//not null
 #else
              vobject.$member.name=thisCell[$inum];
 #end
#end

#set ($inum= $inum + 1)
#end
#end

#foreach($member in $manageable.manageableAssociationEnds)
	#if(!${member.many})
			var manageable=new ${member.type.name}VOJs();
			 if(querydata[i][$inum]!=''&&querydata[i][$inum]!=undefined){
             manageable.id=querydata[i][$inum][1];
             vobject.${member.name}=manageable;
			 }else{
			 grid${manageable.name}.getCell(grid${manageable.name}.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;
			 }
		#set ($inum= $inum + 1)
	#end
#end



       if(passAll==0){
			
			vobject.parentId=queryvo${manageable.name}.parentId;
			
             if(thisCell[1]==0){//create new row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${manageable.name}, "create${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                //grid${manageable.name}.model.setDatum(ul,i,1);
				addTreeNode(selectNode,thisCell[2],vobject.parentId,ul);
				});
	         }else{//modify row
                padd.add('${manageable.name}VO',vobject);
                SOAPClient.invoke(url${manageable.name}, "update${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                setTreeNode(vobject.id,thisCell[2],vobject.parentId);
				});
	         }
        } }}//for
//submit delete
          for(var i=0;i<deletedata${manageable.name}.length;i++){
               var pdel = new SOAPClientParameters();      
               pdel.add('id',deletedata${manageable.name}[i]);
               SOAPClient.invoke(url${manageable.name}, "delete${manageable.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
	             delTreeNode(deletedata${manageable.name}[i]);
	           });
          }
          deletedata${manageable.name}=new Array();
          //dojo.byId("rowCount").innerHTML = 'saved'; 
//submit delete end          
 } 
 
 function removeSelectedRows${manageable.name}(){
       //var s = grid${manageable.name}.selection.getSelected();
       var s= new Array();
       var sall=grid${manageable.name}.model.data;
       for(var i=0;i<sall.length;i++){
       if(sall[i][0]==true){
          s.push(i);
          var thisCell=sall[i];
          if(thisCell[1]!=0){//the row which will be deleted
            deletedata${manageable.name}.splice(deletedata${manageable.name}.length,0,thisCell[1]);
		 }}}
       grid${manageable.name}.model.remove(s);//grid${manageable.name}.removeSelectedRows();
 }
        
addRow${manageable.name} = function(){
          	grid${manageable.name}.addRow([false,0,"","",""],grid${manageable.name}.model.getRowCount());
	        } 	 
	 

	#foreach($member in $manageable.manageableAttributes)
	#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
			var p${member.name} = new SOAPClientParameters();
			p${member.name}.add('eType','${member.name}');
			var item${member.name} = new Array();
			var item${member.name}Option = new Array();
				SOAPClient.invoke(urle, "getEnumerationByType", p${member.name}, false,  function GetEnu_callBack(ul, soapResponse){   
				for(var i = 0; i < ul.length; i++){		
				  var ulo=ul[i];
				  item${member.name}.push({name: ulo["ns:fieldName"], value:ulo["ns:fieldName"]});
				  item${member.name}Option.push(ulo["ns:fieldName"]);
				}                
			});       
			if(item${member.name}.length==0)item${member.name}.push({name:'' , value:''});
			var ${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: item$member.name}}); 
	#end
#end
#foreach($member in $manageable.manageableAssociationEnds)
	var p${member.name} = new SOAPClientParameters();
	var items${member.name} = new Array();  
		p${member.name}.add('${member.type.name}VO',new  ${member.type.name}VOJs()) ;
		p${member.name}.add('pageNumber',0) ;
		p${member.name}.add('pageSize',0) ;
	    p${member.name}.add('orderBy','0') ;
	SOAPClient.invoke(getUrl()+ "services/"+"${member.type.name}ManageService","get${member.type.name}", p${member.name}, false,  function GetEnu_callBack(ul, soapResponse){      
				var tempData=${member.type.name}VOtoArray_fun(ul,false);
				for(var i = 0; i < tempData.length-1; i++){		
				  items${member.name}.push({name: tempData[i][2], value:tempData[i][1]});
				}                
	});       
	if(items${member.name}.length==0)items${member.name}.push({name:'' , value:''});
	var ${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: items${member.name} }});

	function ${member.name}Set(id,value){
        	/*var itemselect=${member.name}Store._getItemByIdentity(value);
        	if(itemselect!='undefined'&& itemselect!=null){
        	}*/
        }
#end

	#set ($totleinum = 0)   
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name != ${manageable.manageableIdentifier.name})
		#if ($member.type.dateType)
			#set ($totleinum= $totleinum + 1)
		#end
		#set ($totleinum= $totleinum + 1)
	#end
#end
#foreach($member in $manageable.manageableAssociationEnds)
		#set ($totleinum= $totleinum + 1)
#end

var layoutSingleRow${manageable.name}=[{
          
 //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydate中取数据
	   
				 cells: [ [
							//{name: '选择', width: 3, get:getChoise},
						   { name: i18nStr.chose, width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
						   { name: i18nStr.no, width: 3, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
	#if (${member.name} != 'parentId' )
         ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
	#end	 
		#set ($inum= $inum + 1)
  #elseif ($member.type.dateType)
		${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
		#set ($inum= $inum + 1)
		${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
		#set ($inum= $inum + 1)
  #else
    #if ($stringUtils.indexOf($member.name,'Enum')!= -1)
	    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
		#set ($inum= $inum + 1)
	#else
		#if ($member.name=='remark')
		    ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
			#set ($inum= $inum + 1)
		#else
			${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
			#set ($inum= $inum + 1)
		#end
    #end
  #end
  #set ($comma = ", ")
#end
#end  

#foreach($member in $manageable.manageableAssociationEnds)//对于单表不许其他判断
	#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata[inRowIndex]!=undefined && querydata[inRowIndex][${inum}]!=undefined && querydata[inRowIndex][${inum}][2]){str=querydata[inRowIndex][${inum}][2];strid=querydata[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
		#set ($inum= $inum + 1)
	#else
		#set ($inum= $inum + 1)
	#end
#end
                                        ] ]
                           }]; 

#if($totleinum > 12)
#set($rowinum = $totleinum / 2)  //rowinum=$rowinum
#set($rowinum = $rowinum - 1)

function getCheck${manageable.name}(){}

var layoutTwoRow=[{
          
 //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydate中取数据
	   
				 cells: [
                      [
						{ name: 'choise', width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },
						{ name: i18nStr.detail, width: 3, get: getCheck${manageable.name}, styles: 'text-align: center;' },
						{ name: 'NO.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
	#set ($comma = "")
	#set ($inum = 2)  
	#set ($inum2 = 0)	
	#set ($layoutium = 0) 
	#set ($ifodd = 0)	
	#foreach($member in $manageable.manageableAttributes)
		#if ($inum < $rowinum )
			#if ($member.name != ${manageable.manageableIdentifier.name})
			    #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					#if (${member.name} != 'parentId' )
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
					 #end
					#set ($inum= $inum + 1)
			  #elseif ($member.type.dateType)
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
					#set ($inum= $inum + 1)
					#set ($comma = ", ")
				#if ($inum == $rowinum)	
					 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					 #set ($inum= $inum + 1)
					 #set ($layoutium = 1) 
					 #set ($inum2 = $inum)
					 ]
				#else
					 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					 #set ($inum= $inum + 1)
				#end
			  #else
				#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
					${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
					#set ($inum= $inum + 1)
				#else
					#if ($member.name=='remark')
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
						#set ($inum= $inum + 1)
					#else
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
						#set ($inum= $inum + 1)
					#end
				#end
			  #end
			  #set ($comma = ", ")
			//--------------  if ($inum == $rowinum)
			#end
		#elseif ($inum == $rowinum)//
			#if ($layoutium == 0)
				#if ($member.name != ${manageable.manageableIdentifier.name})
					   #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					   #if (${member.name} != 'parentId' )
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
						#end	 
							#set ($inum= $inum + 1)
					  #elseif ($member.type.dateType)
							${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
							#set ($comma = ", ")
							#set ($inum= $inum + 1)
							${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
							#set ($inum= $inum + 1)
							#set ($rowinum=$rowinum +1)
							#set ($ifodd = $ifodd + 1 )	
					  #else
							#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
								${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
								#set ($inum= $inum + 1)
							#else
								#if ($member.name=='remark')
									${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
									#set ($inum= $inum + 1)
								#else
									${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
									#set ($inum= $inum + 1)
								#end
							#end
					  #end
					  #set ($comma = ", ")
				#end
				]
				#set ($inum2 = $inum)
				#set ($layoutium = 1) 
			#end
		#else                     //----------------(inum:$inum)  (rowinum: $rowinum)
				#if($layoutium == 0) 
					#if ($member.name != ${manageable.manageableIdentifier.name})
					    #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
						#if (${member.name} != 'parentId' )
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
						 #end
							#set ($inum= $inum + 1)
					  #elseif ($member.type.dateType)
							${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
							#set ($comma = ", ")
							#set ($inum= $inum + 1)
							#if ($inum == $rowinum)	
								 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
								 #set ($inum= $inum + 1)
							#elseif($inum == ($rowinum +1))
								 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
								 #set ($inum= $inum + 1)
								 #set ($rowinum=$rowinum +1)
								 #set ($ifodd = $ifodd + 1 )
							#else
								 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
								 #set ($inum= $inum + 1)								 
							#end
					  #else
							#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
								${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
								#set ($inum= $inum + 1)
							#else
								#if ($member.name=='remark')
									${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
									#set ($inum= $inum + 1)
								#else
									${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
									#set ($inum= $inum + 1)
								#end
							#end
					  #end
					  #set ($comma = ", ")
					  ]
					  #set ($layoutium = 1)  
					  #set ($ifodd = $ifodd + 1 ) 
					  #set ($inum2 = $inum)
					#end
				#end
		#end  
	#end
	
	#foreach($member in $manageable.manageableAssociationEnds)//对于
		#if ($inum < $rowinum)
			#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined && querydata${manageable.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];strid=querydata${manageable.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
				#set ($inum= $inum + 1)
			#else
				#set ($childRow = $inum)
				#set ($inum= $inum + 1)			
			#end
		#elseif ($inum == $rowinum)
			#if ($layoutium == 0)
				#if(!${member.many})                                             
					 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined && querydata${manageable.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];strid=querydata${manageable.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
					#set ($inum= $inum + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
				]
				  #set ($layoutium = 1)
				  #set ($inum2 = $inum)
			#end
		#else  //($inum > $rowinum)
			#if($layoutium == 0) 
				#if(!${member.many})                                             
					 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined && querydata${manageable.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];strid=querydata${manageable.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
					#set ($inum= $inum + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
				]
				#set ($layoutium = 1)
				#set ($ifodd = $ifodd + 1 )
				#set ($inum2 = $inum)
			#end	
		#end
	#end 
	,[
	#set ($comma = "")
	#set ($inum = 2) //  22222222222inum= $inum   inum2=$inum2
	#foreach($member in $manageable.manageableAttributes)
		#if ($inum >= $inum2)
			#if ($member.name != ${manageable.manageableIdentifier.name})
			    #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
				#if (${member.name} != 'parentId' )
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
				#end	 
					#set ($inum= $inum + 1)
			  #elseif ($member.type.dateType)
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
					#set ($inum= $inum + 1)
					#set ($comma = ", ")
					${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					#set ($inum= $inum + 1)
			  #else
					#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
						#set ($inum= $inum + 1)
					#else
						#if ($member.name=='remark')
							${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
							#set ($inum= $inum + 1)
						#else
							${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
							#set ($inum= $inum + 1)
						#end
					#end
			  #end
			  #set ($comma = ", ")
			#end
		#else
			#if ($member.type.dateType)
				#set ($inum= $inum + 1)
			#end
			#set ($inum= $inum + 1)
		#end
	#end  

	#foreach($member in $manageable.manageableAssociationEnds)//对于
		#if ($inum >= $inum2)
			#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined && querydata${manageable.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];strid=querydata${manageable.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick="select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
				#set ($inum= $inum + 1)
			#else
				#set ($childRow = $inum)
				#set ($inum= $inum + 1)			
			#end
			 #set ($comma = ", ")
		#else
			#set ($inum= $inum + 1)
		#end
	#end 
 	
	#if ($ifodd != 0)
		${comma}  {name: ' ',colSpan: $inum2 ,value:' ' ,width: 10 }
	#end
	]]
                           }]; 						   
						   
#end

/*	dojo.connect(dijit.byId("${manageable.name}AFTab"), "selectChild", function(e){
#set ($ifString = "if") 
#foreach($member in $manageable.AssociationEnds)
	#if(!${member.many})
		$ifString (dijit.byId("${manageable.name}AFTab").selectedChildWidget.id=="${member.association.name}"){
			build${member.association.name}();
		#set ($ifString = "}else if") 
	#end
#end
	}
		}); */
function myOnLoad(){
	dojo.connect(dijit.byId("${manageable.name}AFTab"), "selectChild", function(e){
	clickRowTab();
	}); 
}
function resetNU(trueTab){
	#foreach($member in $manageable.AssociationEnds)
		#if(!${member.many})
			NU${member.association.name}=true;
		#end
	#end
}
function clickRowTab(){
	#set ($ifString = "}else if")
	if(dijit.byId("${manageable.name}AFTab").selectedChildWidget.id=='${manageable.name}Crud'){
			queryvo${manageable.name}=new ${manageable.name}VOJs();
			queryvo${manageable.name}.parentId=mainID;
			getVO${manageable.name}(queryvo${manageable.name});
		#foreach($member in $manageable.AssociationEnds)
			#if(!${member.many})
				$ifString (dijit.byId("${manageable.name}AFTab").selectedChildWidget.id=="${member.association.name}"){
					build${member.association.name}();
				#set ($ifString = "}else if") 
			#end
		#end
		#if($ifString == "}else if")
		}
		#end
}
				
var mainID;
function getVO${manageable.name}(queryvo){
	var totalCount=0;
      var pu = new SOAPClientParameters2();
      pu.add('${manageable.name}VO',queryvo) ;
      pu.add('pageNumber',pagenumber${manageable.name}) ;
	    pu.add('pageSize',pagesize${manageable.name}) ;
	    pu.add('orderBy',orderBy${manageable.name}) ;
      SOAPClient.invoke(url${manageable.name},"get${manageable.name}", pu, false,  function GetEnu_callBack(ul, soapResponse){      
           querydata${manageable.name}=new Array();
		   querydata${manageable.name}=${manageable.name}VOtoArray_fun(ul,false);
           totalCount${manageable.name}=ul[ul.length-1]["ns:id"]; 
      }); 
      querydata${manageable.name}.splice(querydata${manageable.name}.length-1,1);
      model${manageable.name}.setData(querydata${manageable.name});
      var totalpage=Math.ceil(new Number(totalCount${manageable.name})/pagesize${manageable.name});
	  
	if(totalpage>1){
		if(pagenumber${manageable.name}==1){
			dijit.byId("but6${manageable.name}").setDisabled(true);
			dijit.byId("but7${manageable.name}").setDisabled(false);
		}else if(pagenumber${manageable.name}==totalpage){
			dijit.byId("but6${manageable.name}").setDisabled(false);
			dijit.byId("but7${manageable.name}").setDisabled(true);
		}else{
			dijit.byId("but6${manageable.name}").setDisabled(false);
			dijit.byId("but7${manageable.name}").setDisabled(false);
		}
	}else{
		dijit.byId("but6${manageable.name}").setDisabled(true);
		dijit.byId("but7${manageable.name}").setDisabled(true);
	
	}
	if(pagesize${manageable.name}==0){
		totalpage=1;
		dijit.byId("but6${manageable.name}").setDisabled(true);
		dijit.byId("but7${manageable.name}").setDisabled(true);
	}
	if(totalpage==1)pagenumber${manageable.name}=1;
	
	 document.getElementById("rowCount${manageable.name}").innerHTML=i18nStr.di+" "+pagenumber${manageable.name}+" "+i18nStr.page+" / "+i18nStr.totle+" "+totalpage+" "+i18nStr.page+" / "+i18nStr.sum+" "+totalCount${manageable.name}+" "+i18nStr.rowSize; 	
	  
	  
 }
var connecthandle=0 ;
var handle ;
var mainID;
function init(){
 var _tree=dijit.byId("tree");  
	//queryvo${manageable.name}=new ${manageable.name}VOJs();
    queryvo${manageable.name}.parentId=0;
	getTreeNodes(queryvo${manageable.name},null,0,2);
	expandAllChildrenNode(_tree,_tree.rootNode,0,1);
	
	dojo.connect(dijit.byId("tree"), "_onExpandoClick", function(message){
		   var node = message.node;
		   var ch2node=node.getChildren();
		   for (var i=0; i<ch2node.length; i++){	
		   if(ch2node[i].getChildren().length==0&&ch2node[i].item.haveChild=="0"){
			 var ch2item =ch2node[i].item;
			 queryvo${manageable.name}=new ${manageable.name}VOJs();
			 queryvo${manageable.name}.parentId=ch2item.eId;
			 getTreeNodes(queryvo${manageable.name},ch2item,0,1);
		   }}
	});   
	 dojo.connect(_tree, "onClick", function(item,node){
	 //判断哪个tab在显示
			selectNode=node;
			selectNodeIdentity = _tree.store.getIdentity(item);
			mainID=item["eId"];
			if(mainID!=undefined){
				resetNU();
				clickRowTab();	
			}else{
				queryvo${manageable.name}=new ${manageable.name}VOJs();
				queryvo${manageable.name}.parentId=0;
				getVO${manageable.name}(queryvo${manageable.name});
			}
   }); 
  
setTimeout(function(){
	dijit.byId("grid${manageable.name}").resize({w: document.body.clientWidth-60,h: document.body.clientHeight-40});
	
	   dojo.connect(dijit.byId("rightPane"), "_afterResize", function(e){
			${manageable.name}AFTab.resize({w: dijit.byId("rightPane").domNode.clientWidth-10,h: document.body.clientHeight-40});
#foreach($member in $manageable.AssociationEnds)
	#if(!${member.many})
		if(dijit.byId("grid${member.association.name}")!=undefined)dijit.byId("grid${member.association.name}").resize({w: dijit.byId("rightPane").domNode.clientWidth-16,h:dijit.byId("rightPane").domNode.clientHeight-100});
	#end
 #end
		dijit.byId("grid${manageable.name}").resize({w:document.body.clientWidth-dijit.byId("rightPane").domNode.clientWidth-36});
	  }); 
	  
	},0);
  
}

dojo.addOnLoad(init);   
 
#foreach($member in $manageable.manageableAssociationEnds)
	function select${member.type.name}Fun(rep){
		querydata${manageable.name}[select${member.type.name}InRow][no${member.type.name}]=rep;
		grid${manageable.name}.updateRow(select${member.type.name}InRow);		
	}
#end
 
function querybutton${manageable.name}(){
              //var p = new SOAPClientParameters2();
              var d,n;
              var validstate=0;
              //queryvo${manageable.name}.id=0 ;
              queryvo${manageable.name}=new ${manageable.name}VOJs();
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name != ${manageable.manageableIdentifier.name})
		#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					  n=queryNumber_fun("${manageable.name}${member.name}");
					  if(n==null){validstate=1;}else if(n.upSign!="%"){queryvo${manageable.name}.${member.name}=n;}  
		#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')   
					  d=queryDate_fun("${manageable.name}${member.name}");
					  if(d==null){validstate=1;}else if(d.upSign!="%"){queryvo${manageable.name}.${member.name}=d;}
		#else
					  if(query${manageable.name}${member.name}.getDisplayedValue()!="")queryvo${manageable.name}.${member.name}=query${manageable.name}${member.name}.getDisplayedValue();//
		#end
	#end
#end
			
#foreach($member in $manageable.manageableAssociationEnds)
	if(query${manageable.name}${member.name}.getDisplayedValue()!=""){
				var ${manageable.name}${member.name}Query= new ${member.type.name}VOJs();
				//${member.name}Query.${manageable.name}Name=query${member.name}.getDisplayedValue();
				${manageable.name}${member.name}Query.id=query${manageable.name}${member.name}.getValue();
				queryvo${manageable.name}.${member.name}=${manageable.name}${member.name}Query;
			  }
#end

			if(validstate==0){
              pagenumber=1;
			  getVO${manageable.name}(queryvo${manageable.name});
              //getVO(queryvo${manageable.name},pagenumber,pagesize,'0'); 
              //if(totalpage>1){dijit.byId("but7").setDisabled(false);}else{dijit.byId("but7").setDisabled(true);} 
             }      
       }

function pageSizeChange${manageable.name}(mylabel){
	pagesize${manageable.name}=mylabel;
	getVO${manageable.name}(queryvo${manageable.name});
}

function allpage${manageable.name}(){
	pagesize${manageable.name}=0;
	getVO${manageable.name}(queryvo${manageable.name});
}

function upPage${manageable.name}(){
	pagenumber${manageable.name}--;
	getVO${manageable.name}(queryvo${manageable.name});
}
function downPage${manageable.name}(){
	pagenumber${manageable.name}++;
	getVO${manageable.name}(queryvo${manageable.name});
}

//totleinum=$totleinum

</script>
</head>
<body class="tundra">
<div id="bc" style="width:100%; height:100%;" dojoType="dijit.layout.BorderContainer">
<div id="topPane"  dojoType="dojox.layout.ExpandoPane" splitter="true" duration="125" region="left" title=""	style="width:375px;" >
<div id="tree" showRoot="true" persist="false" dojoType="dijit.Tree"  store="popStore" labelAttr="name"  childrenAttr="children"  model="treeModel" ></div> 
   </div>   
	<div   dojoType="dijit.layout.ContentPane"  title="" region="center"  href="${manageable.name}TreeRightCrudAFTab.html" onLoad="myOnLoad" preload="true" id="rightPane" jsId="rightPane" >
	</div> 
</div>	
</body>
<script type="text/javascript">trans18tag();</script>
</html>
#end