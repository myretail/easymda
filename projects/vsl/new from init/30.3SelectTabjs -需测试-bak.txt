//name =${manageable.name}SelectTab.js
#set ($inum= 1)
#foreach($memberAs in $manageable.manageableAssociationEnds)//对于可修改的layout，($member in $manageable.manageableAssociationEnds)并if(!${member.many})  的字段应弹出Float的选择窗口待测试
	#if(!${memberAs.many})      
  var NU${memberAs.type.name} = false;//needUpdate
  var url${memberAs.type.name} = getUrl()+ "services/${memberAs.type.name}ManageService";
  var deletedata${memberAs.type.name} =  new Array();
  var querydata${memberAs.type.name} =  new Array();
  var pagenumber${memberAs.type.name}=1;
  var totalCount${memberAs.type.name}=0;
  var pagesize${memberAs.type.name}=10;
  var orderBy${memberAs.type.name}='0';
  var queryvo${memberAs.type.name}=new ${memberAs.type.name}VOJs();
  var oddstyle='';
  var model${memberAs.type.name} = new dojox.grid.data.Table(null, querydata${memberAs.type.name});
  var grid${memberAs.type.name};
  
#foreach($member in $manageable.manageableAttributes)
	#if ($member.type.fullyQualifiedName=='com.logistics.entity.order.StringEnum')
		/*	var p${memberAs.type.name}${member.name} = new SOAPClientParameters();
			p${memberAs.type.name}${member.name}.add('eType','${member.name}');
			var item${memberAs.type.name}${member.name} = new Array();
				SOAPClient.invoke(urle, "getEnumerationByType", p${memberAs.type.name}${member.name}, false,  function GetEnu_callBack(ul, soapResponse){   
				for(var i = 0; i < ul.length; i++){		
				  var ulo=ul[i];
				  item${memberAs.type.name}${member.name}.push({name: ulo["ns:fieldName"], value:ulo["ns:fieldName"]});
				}                
			});       
			var ${memberAs.type.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: item$member.name}}); */
			
	#end
#end  

//have set function's manageableAssociationEnds
#foreach($member in $manageable.manageableAssociationEnds)
	/*var p${memberAs.type.name}${member.name} = new SOAPClientParameters();
	var items${memberAs.type.name}${member.name} = new Array();  
		p${memberAs.type.name}${member.name}.add('${member.type.name}VO',new  ${member.type.name}VOJs()) ;
		p${memberAs.type.name}${member.name}.add('pageNumber',0) ;
		p${memberAs.type.name}${member.name}.add('pageSize',0) ;
	    p${memberAs.type.name}${member.name}.add('orderBy','0') ;
	SOAPClient.invoke(getUrl()+ "services/"+"${member.type.name}ManageService","get${member.type.name}", p${memberAs.type.name}${member.name}, false,  function GetEnu_callBack(ul, soapResponse){      
				for(var i = 0; i < ul.length-1; i++){		
				  var ulo=ul[i];
				  items${memberAs.type.name}${member.name}.push({name: ulo["ns:${member.type.name}Name"], value:ulo["ns:id"]});
				}                
	});       
	var ${memberAs.type.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: items${memberAs.type.name}${member.name} }});*/
var ${memberAs.type.name}${member.name}Store = new dojo.data.ItemFileWriteStore({data: {identifier:"value", items: [] }});
	function ${memberAs.type.name}${member.name}Set(id,value){
        	/*var itemselect=${member.name}Store._getItemByIdentity(value);
        	if(itemselect!='undefined'&& itemselect!=null){
        	}*/
        }
#end

  
  
var getVO${memberAs.type.name}=function(queryvo){

	var pu = new SOAPClientParameters2();
	pu.add('${memberAs.type.name}VO',queryvo) ;
	pu.add('pageNumber',pagenumber${memberAs.type.name}) ;
	pu.add('pageSize',pagesize${memberAs.type.name}) ;
	pu.add('orderBy',orderBy${memberAs.type.name}) ;
	SOAPClient.invoke(url${memberAs.type.name},"get${memberAs.type.name}", pu, false,  function GetEnu_callBack(ul, soapResponse){      
	querydata${memberAs.type.name}=${memberAs.type.name}VOtoArray_fun(ul,false);
	totalCount${memberAs.type.name}=ul[ul.length-1]["ns:id"]; 
	}); 
	var totalpage=Math.ceil(new Number(totalCount${memberAs.type.name})/pagesize${memberAs.type.name});
	
	if(totalpage>1){
		if(pagenumber${memberAs.type.name}==1){
			dijit.byId("but6${memberAs.type.name}").setDisabled(true);
			dijit.byId("but7${memberAs.type.name}").setDisabled(false);
		}else if(pagenumber${memberAs.type.name}==totalpage){
			dijit.byId("but6${memberAs.type.name}").setDisabled(false);
			dijit.byId("but7${memberAs.type.name}").setDisabled(true);
		}else{
			dijit.byId("but6${memberAs.type.name}").setDisabled(false);
			dijit.byId("but7${memberAs.type.name}").setDisabled(false);
		}
	}else{
		dijit.byId("but6${memberAs.type.name}").setDisabled(true);
		dijit.byId("but7${memberAs.type.name}").setDisabled(true);
	
	}
	if(pagesize${memberAs.type.name}==0){
		totalpage=1;
		dijit.byId("but6${memberAs.type.name}").setDisabled(true);
		dijit.byId("but7${memberAs.type.name}").setDisabled(true);
	}
	if(totalpage==1)pagenumber${memberAs.type.name}=1;
	
	 document.getElementById("rowCount${memberAs.type.name}").innerHTML=i18nStr.di+" "+pagenumber${memberAs.type.name}+" "+i18nStr.page+" / "+i18nStr.totle+" "+totalpage+" "+i18nStr.page+" / "+i18nStr.sum+" "+totalCount${memberAs.type.name}+" "+i18nStr.rowSize; 	

	querydata${memberAs.type.name}.splice(querydata${memberAs.type.name}.length-1,1);
	model${memberAs.type.name}.setData(querydata${memberAs.type.name});
}

var build${memberAs.type.name}=function(){
	if(NU${memberAs.type.name} && mainID!=undefined && mainID!=''){
		var queryFloat${memberAs.type.name}=new ${memberAs.type.name}VOJs();
		queryFloat${memberAs.type.name}.id=mainID;
		queryvo${memberAs.type.name}.${memberAs.name}=queryFloat${memberAs.type.name};
		getVO${memberAs.type.name}(queryvo${memberAs.type.name});
		if(grid${memberAs.type.name}==undefined){
			  grid${memberAs.type.name} = new dojox.Grid({
						title: "",
						id: "grid${memberAs.type.name}",
						jsId: "grid${memberAs.type.name}",
						structure: layout${memberAs.type.name},
						rowCount:querydata${memberAs.type.name}.length,
						model:model${memberAs.type.name}
					}, dojo.byId("grid${memberAs.type.name}"));
				grid${memberAs.type.name}.resize({ h: dijit.byId("bottomPane").domNode.clientHeight-90});
				
		}else{
			grid${memberAs.type.name}.updateRowCount(querydata${memberAs.type.name}.length); 
		}
		NU${memberAs.type.name}=false;
	}

}
	var layout${memberAs.type.name}=[{
           //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydate中取数据
   
			 cells: [ [
					   { name: i18nStr.chose, width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },//
					   { name: i18nStr.no, width: 3, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $manageable.manageableAttributes)
#if ($member.name != ${manageable.manageableIdentifier.name})
  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
         ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
		#set ($inum= $inum + 1)
  #elseif ($member.type.dateType)
		${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8}
		#set ($inum= $inum + 1)
  #else
        ${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 }
			#set ($inum= $inum + 1)
  #end
  #set ($comma = ", ")
#end
#end  

#foreach($member in $manageable.manageableAssociationEnds)//对于单表不许其他判断
		${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${memberAs.type.name}[inRowIndex]!=undefined && querydata${memberAs.type.name}[inRowIndex][${inum}]!=undefined && querydata${memberAs.type.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${memberAs.type.name}[inRowIndex][${inum}][2];strid=querydata${memberAs.type.name}[inRowIndex][${inum}][1];} return str;} ,width: 10 }
		#set ($inum= $inum + 1)
#end
       ] ]
                           }]; 

function pageSizeChange${memberAs.type.name}(mylabel){
	pagesize${memberAs.type.name}=mylabel;
	getVO${memberAs.type.name}(queryvo${memberAs.type.name});
}

function allpage${memberAs.type.name}(){
	pagesize${memberAs.type.name}=0;
	getVO${memberAs.type.name}(queryvo${memberAs.type.name});
}

function upPage${memberAs.type.name}(){
	pagenumber${memberAs.type.name}--;
	getVO${memberAs.type.name}(queryvo${memberAs.type.name});
}
function downPage${memberAs.type.name}(){
	pagenumber${memberAs.type.name}++;
	getVO${memberAs.type.name}(queryvo${memberAs.type.name});
}

#set($inum=$inum+1)
#end
#if($inum==2)
	//build${memberAs.type.name}();
#end
#end
