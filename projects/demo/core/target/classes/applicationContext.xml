<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

    <!-- applicationContext merge-point -->
    <bean id="hibernateMappingLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- applicationContext hibernateMappingLocations merge-point -->
                <value>classpath:com/demo/entity/basic/Enumeration.hbm.xml</value>
                <value>classpath:com/demo/entity/basic/Prod.hbm.xml</value>
                <value>classpath:com/demo/entity/basic/Customer.hbm.xml</value>
                <value>classpath:com/demo/entity/basic/Contact.hbm.xml</value>
                <value>classpath:com/demo/entity/order/Orderd.hbm.xml</value>
                <value>classpath:com/demo/entity/order/OrderRowd.hbm.xml</value>
                <value>classpath:com/demo/entity/order/OrderRowTask.hbm.xml</value>
                <value>classpath:com/demo/entity/order/Task.hbm.xml</value>
                <value>classpath:com/demo/entity/order/TaskForm.hbm.xml</value>
                <value>classpath:com/demo/entity/order/car.hbm.xml</value>
                <value>classpath:com/demo/entity/order/Payment.hbm.xml</value>
                <value>classpath:com/demo/entity/orga/Orga.hbm.xml</value>
                <value>classpath:com/demo/entity/orga/Peoples.hbm.xml</value>
                <value>classpath:com/demo/entity/orga/OrgaPeoples.hbm.xml</value>
            </list>
         </property>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <!-- applicationContext hibernateProperties merge-point -->
            </props>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="mappingLocations"><ref bean="hibernateMappingLocations"/></property>
        <property name="hibernateProperties"><ref bean="hibernateProperties"/></property>
        <!-- applicationContext sessionFactory merge-point -->
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <!-- applicationContext hibernateInterceptor merge-point -->
    </bean>

    <!-- Enumeration Entity Proxy with inner Enumeration Entity implementation -->
    <bean id="enumerationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.basic.EnumerationDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <!-- Enumeration entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.basic.EnumerationDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Prod Entity Proxy with inner Prod Entity implementation -->
    <bean id="prodDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.basic.ProdDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="customerDao"><ref bean="customerDao"/></property>
                <property name="peoplesDao"><ref bean="peoplesDao"/></property>
                <!-- Prod entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.basic.ProdDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Customer Entity Proxy with inner Customer Entity implementation -->
    <bean id="customerDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.basic.CustomerDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <!-- Customer entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.basic.CustomerDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Contact Entity Proxy with inner Contact Entity implementation -->
    <bean id="contactDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.basic.ContactDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="customerDao"><ref bean="customerDao"/></property>
                <!-- Contact entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.basic.ContactDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Orderd Entity Proxy with inner Orderd Entity implementation -->
    <bean id="orderdDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.OrderdDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="customerDao"><ref bean="customerDao"/></property>
                <lookup-method name="getOrderRowdDao" bean="orderRowdDao"/>
                <!-- Orderd entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.OrderdDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrderRowd Entity Proxy with inner OrderRowd Entity implementation -->
    <bean id="orderRowdDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.OrderRowdDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="prodDao"><ref bean="prodDao"/></property>
                <lookup-method name="getOrderdDao" bean="orderdDao"/>
                <!-- OrderRowd entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.OrderRowdDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrderRowTask Entity Proxy with inner OrderRowTask Entity implementation -->
    <bean id="orderRowTaskDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.OrderRowTaskDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="orderRowdDao"><ref bean="orderRowdDao"/></property>
                <property name="taskDao"><ref bean="taskDao"/></property>
                <!-- OrderRowTask entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.OrderRowTaskDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Task Entity Proxy with inner Task Entity implementation -->
    <bean id="taskDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.TaskDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <lookup-method name="getTaskFormDao" bean="taskFormDao"/>
                <!-- Task entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.TaskDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- TaskForm Entity Proxy with inner TaskForm Entity implementation -->
    <bean id="taskFormDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.TaskFormDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="carDao"><ref bean="carDao"/></property>
                <lookup-method name="getTaskDao" bean="taskDao"/>
                <!-- TaskForm entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.TaskFormDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- car Entity Proxy with inner car Entity implementation -->
    <bean id="carDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.carDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <!-- car entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.carDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Payment Entity Proxy with inner Payment Entity implementation -->
    <bean id="paymentDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.order.PaymentDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="orderRowdDao"><ref bean="orderRowdDao"/></property>
                <!-- Payment entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.order.PaymentDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Orga Entity Proxy with inner Orga Entity implementation -->
    <bean id="orgaDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.orga.OrgaDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <!-- Orga entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.orga.OrgaDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Peoples Entity Proxy with inner Peoples Entity implementation -->
    <bean id="peoplesDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.orga.PeoplesDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <!-- Peoples entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.orga.PeoplesDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrgaPeoples Entity Proxy with inner OrgaPeoples Entity implementation -->
    <bean id="orgaPeoplesDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.entity.orga.OrgaPeoplesDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
                <property name="orgaDao"><ref bean="orgaDao"/></property>
                <property name="peoplesDao"><ref bean="peoplesDao"/></property>
                <!-- OrgaPeoples entity property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.entity.orga.OrgaPeoplesDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- ContactManageService Service Proxy with inner ContactManageService Service Implementation -->
    <bean id="contactManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.basic.ContactManageServiceImpl">
                <property name="contactDao"><ref bean="contactDao"/></property>
                <!-- ContactManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.basic.ContactManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- CustomerManageService Service Proxy with inner CustomerManageService Service Implementation -->
    <bean id="customerManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.basic.CustomerManageServiceImpl">
                <property name="customerDao"><ref bean="customerDao"/></property>
                <!-- CustomerManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.basic.CustomerManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ProdManageService Service Proxy with inner ProdManageService Service Implementation -->
    <bean id="prodManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.basic.ProdManageServiceImpl">
                <property name="prodDao"><ref bean="prodDao"/></property>
                <!-- ProdManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.basic.ProdManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- BasicManageService Service Proxy with inner BasicManageService Service Implementation -->
    <bean id="basicManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.basic.BasicManageServiceImpl">
                <property name="enumerationDao"><ref bean="enumerationDao"/></property>
                <!-- BasicManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.basic.BasicManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrderdManageService Service Proxy with inner OrderdManageService Service Implementation -->
    <bean id="orderdManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.OrderdManageServiceImpl">
                <property name="orderdDao"><ref bean="orderdDao"/></property>
                <property name="orderRowdDao"><ref bean="orderRowdDao"/></property>
                <!-- OrderdManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.OrderdManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrderRowdManageService Service Proxy with inner OrderRowdManageService Service Implementation -->
    <bean id="orderRowdManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.OrderRowdManageServiceImpl">
                <property name="orderRowdDao"><ref bean="orderRowdDao"/></property>
                <!-- OrderRowdManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.OrderRowdManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrderRowTaskManageService Service Proxy with inner OrderRowTaskManageService Service Implementation -->
    <bean id="orderRowTaskManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.OrderRowTaskManageServiceImpl">
                <property name="orderRowTaskDao"><ref bean="orderRowTaskDao"/></property>
                <property name="orderRowdDao"><ref bean="orderRowdDao"/></property>
                <property name="taskDao"><ref bean="taskDao"/></property>
                <property name="taskFormDao"><ref bean="taskFormDao"/></property>
                <!-- OrderRowTaskManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.OrderRowTaskManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- carManageService Service Proxy with inner carManageService Service Implementation -->
    <bean id="carManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.carManageServiceImpl">
                <property name="carDao"><ref bean="carDao"/></property>
                <!-- carManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.carManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- TaskFormManageService Service Proxy with inner TaskFormManageService Service Implementation -->
    <bean id="taskFormManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.TaskFormManageServiceImpl">
                <property name="taskFormDao"><ref bean="taskFormDao"/></property>
                <property name="taskDao"><ref bean="taskDao"/></property>
                <!-- TaskFormManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.TaskFormManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- TaskManageService Service Proxy with inner TaskManageService Service Implementation -->
    <bean id="taskManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.TaskManageServiceImpl">
                <property name="taskDao"><ref bean="taskDao"/></property>
                <!-- TaskManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.TaskManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- PaymentManageService Service Proxy with inner PaymentManageService Service Implementation -->
    <bean id="paymentManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.order.PaymentManageServiceImpl">
                <property name="paymentDao"><ref bean="paymentDao"/></property>
                <!-- PaymentManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.order.PaymentManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrgaManageService Service Proxy with inner OrgaManageService Service Implementation -->
    <bean id="orgaManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.orga.OrgaManageServiceImpl">
                <property name="orgaDao"><ref bean="orgaDao"/></property>
                <!-- OrgaManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.orga.OrgaManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- PeoplesManageService Service Proxy with inner PeoplesManageService Service Implementation -->
    <bean id="peoplesManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.orga.PeoplesManageServiceImpl">
                <property name="peoplesDao"><ref bean="peoplesDao"/></property>
                <!-- PeoplesManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.orga.PeoplesManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- OrgaPeoplesManageService Service Proxy with inner OrgaPeoplesManageService Service Implementation -->
    <bean id="orgaPeoplesManageService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.demo.service.orga.OrgaPeoplesManageServiceImpl">
                <property name="orgaPeoplesDao"><ref bean="orgaPeoplesDao"/></property>
                <property name="orgaDao"><ref bean="orgaDao"/></property>
                <property name="peoplesDao"><ref bean="peoplesDao"/></property>
                <!-- OrgaPeoplesManageService service property merge-point -->
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>com.demo.service.orga.OrgaPeoplesManageService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>
