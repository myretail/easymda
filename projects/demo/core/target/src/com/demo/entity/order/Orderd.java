// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.demo.entity.order;

/**
 * 
 */
public abstract class Orderd
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 6715405025252678994L;

    private java.lang.String customerOrderNo;

    /**
     * 
     */
    public java.lang.String getCustomerOrderNo()
    {
        return this.customerOrderNo;
    }

    public void setCustomerOrderNo(java.lang.String customerOrderNo)
    {
        this.customerOrderNo = customerOrderNo;
    }

    private java.lang.String contractNo;

    /**
     * 
     */
    public java.lang.String getContractNo()
    {
        return this.contractNo;
    }

    public void setContractNo(java.lang.String contractNo)
    {
        this.contractNo = contractNo;
    }

    private java.lang.String conveyanceEnum;

    /**
     * 
     */
    public java.lang.String getConveyanceEnum()
    {
        return this.conveyanceEnum;
    }

    public void setConveyanceEnum(java.lang.String conveyanceEnum)
    {
        this.conveyanceEnum = conveyanceEnum;
    }

    private java.lang.String carryTypeEnum;

    /**
     * 
     */
    public java.lang.String getCarryTypeEnum()
    {
        return this.carryTypeEnum;
    }

    public void setCarryTypeEnum(java.lang.String carryTypeEnum)
    {
        this.carryTypeEnum = carryTypeEnum;
    }

    private java.lang.String shipperRemark;

    /**
     * 
     */
    public java.lang.String getShipperRemark()
    {
        return this.shipperRemark;
    }

    public void setShipperRemark(java.lang.String shipperRemark)
    {
        this.shipperRemark = shipperRemark;
    }

    private java.lang.String carrierRemark;

    /**
     * 
     */
    public java.lang.String getCarrierRemark()
    {
        return this.carrierRemark;
    }

    public void setCarrierRemark(java.lang.String carrierRemark)
    {
        this.carrierRemark = carrierRemark;
    }

    private java.lang.String levelEnum;

    /**
     * 
     */
    public java.lang.String getLevelEnum()
    {
        return this.levelEnum;
    }

    public void setLevelEnum(java.lang.String levelEnum)
    {
        this.levelEnum = levelEnum;
    }

    private java.lang.String customerTypeEnum;

    /**
     * 
     */
    public java.lang.String getCustomerTypeEnum()
    {
        return this.customerTypeEnum;
    }

    public void setCustomerTypeEnum(java.lang.String customerTypeEnum)
    {
        this.customerTypeEnum = customerTypeEnum;
    }

    private java.util.Date referTime;

    /**
     * 
     */
    public java.util.Date getReferTime()
    {
        return this.referTime;
    }

    public void setReferTime(java.util.Date referTime)
    {
        this.referTime = referTime;
    }

    private java.lang.String linkMan;

    /**
     * 
     */
    public java.lang.String getLinkMan()
    {
        return this.linkMan;
    }

    public void setLinkMan(java.lang.String linkMan)
    {
        this.linkMan = linkMan;
    }

    private java.lang.String tel;

    /**
     * 
     */
    public java.lang.String getTel()
    {
        return this.tel;
    }

    public void setTel(java.lang.String tel)
    {
        this.tel = tel;
    }

    private java.util.Date bookTime;

    /**
     * 
     */
    public java.util.Date getBookTime()
    {
        return this.bookTime;
    }

    public void setBookTime(java.util.Date bookTime)
    {
        this.bookTime = bookTime;
    }

    private java.util.Date completeTime;

    /**
     * 
     */
    public java.util.Date getCompleteTime()
    {
        return this.completeTime;
    }

    public void setCompleteTime(java.util.Date completeTime)
    {
        this.completeTime = completeTime;
    }

    private java.lang.String remark;

    /**
     * 
     */
    public java.lang.String getRemark()
    {
        return this.remark;
    }

    public void setRemark(java.lang.String remark)
    {
        this.remark = remark;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection orderRow = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getOrderRow()
    {
        return this.orderRow;
    }

    public void setOrderRow(java.util.Collection orderRow)
    {
        this.orderRow = orderRow;
    }

    private com.demo.entity.basic.Customer customer;

    /**
     * 
     */
    public com.demo.entity.basic.Customer getCustomer()
    {
        return this.customer;
    }

    public void setCustomer(com.demo.entity.basic.Customer customer)
    {
        this.customer = customer;
    }

    /**
     * Returns <code>true</code> if the argument is an Orderd instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Orderd))
        {
            return false;
        }
        final Orderd that = (Orderd)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.demo.entity.order.Orderd}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.demo.entity.order.Orderd}.
         */
        public static com.demo.entity.order.Orderd newInstance()
        {
            return new com.demo.entity.order.OrderdImpl();
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.order.Orderd}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.demo.entity.order.Orderd newInstance(java.lang.String conveyanceEnum, java.util.Date bookTime, com.demo.entity.basic.Customer customer)
        {
            final com.demo.entity.order.Orderd entity = new com.demo.entity.order.OrderdImpl();
            entity.setConveyanceEnum(conveyanceEnum);
            entity.setBookTime(bookTime);
            entity.setCustomer(customer);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.order.Orderd}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.demo.entity.order.Orderd newInstance(java.lang.String customerOrderNo, java.lang.String contractNo, java.lang.String conveyanceEnum, java.lang.String carryTypeEnum, java.lang.String shipperRemark, java.lang.String carrierRemark, java.lang.String levelEnum, java.lang.String customerTypeEnum, java.util.Date referTime, java.lang.String linkMan, java.lang.String tel, java.util.Date bookTime, java.util.Date completeTime, java.lang.String remark, java.util.Collection orderRow, com.demo.entity.basic.Customer customer)
        {
            final com.demo.entity.order.Orderd entity = new com.demo.entity.order.OrderdImpl();
            entity.setCustomerOrderNo(customerOrderNo);
            entity.setContractNo(contractNo);
            entity.setConveyanceEnum(conveyanceEnum);
            entity.setCarryTypeEnum(carryTypeEnum);
            entity.setShipperRemark(shipperRemark);
            entity.setCarrierRemark(carrierRemark);
            entity.setLevelEnum(levelEnum);
            entity.setCustomerTypeEnum(customerTypeEnum);
            entity.setReferTime(referTime);
            entity.setLinkMan(linkMan);
            entity.setTel(tel);
            entity.setBookTime(bookTime);
            entity.setCompleteTime(completeTime);
            entity.setRemark(remark);
            entity.setOrderRow(orderRow);
            entity.setCustomer(customer);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}