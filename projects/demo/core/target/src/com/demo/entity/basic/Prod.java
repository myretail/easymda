// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.demo.entity.basic;

/**
 * 
 */
public abstract class Prod
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -4783832204741911534L;

    private java.lang.String prodName;

    /**
     * 
     */
    public java.lang.String getProdName()
    {
        return this.prodName;
    }

    public void setProdName(java.lang.String prodName)
    {
        this.prodName = prodName;
    }

    private java.lang.String code;

    /**
     * 
     */
    public java.lang.String getCode()
    {
        return this.code;
    }

    public void setCode(java.lang.String code)
    {
        this.code = code;
    }

    private double price;

    /**
     * 
     */
    public double getPrice()
    {
        return this.price;
    }

    public void setPrice(double price)
    {
        this.price = price;
    }

    private java.util.Date datef;

    /**
     * 
     */
    public java.util.Date getDatef()
    {
        return this.datef;
    }

    public void setDatef(java.util.Date datef)
    {
        this.datef = datef;
    }

    private java.lang.String prodType;

    /**
     * 
     */
    public java.lang.String getProdType()
    {
        return this.prodType;
    }

    public void setProdType(java.lang.String prodType)
    {
        this.prodType = prodType;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private com.demo.entity.basic.Customer prodCust;

    /**
     * 
     */
    public com.demo.entity.basic.Customer getProdCust()
    {
        return this.prodCust;
    }

    public void setProdCust(com.demo.entity.basic.Customer prodCust)
    {
        this.prodCust = prodCust;
    }

    private com.demo.entity.orga.Peoples principal;

    /**
     * 
     */
    public com.demo.entity.orga.Peoples getPrincipal()
    {
        return this.principal;
    }

    public void setPrincipal(com.demo.entity.orga.Peoples principal)
    {
        this.principal = principal;
    }

    /**
     * Returns <code>true</code> if the argument is an Prod instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Prod))
        {
            return false;
        }
        final Prod that = (Prod)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.demo.entity.basic.Prod}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.demo.entity.basic.Prod}.
         */
        public static com.demo.entity.basic.Prod newInstance()
        {
            return new com.demo.entity.basic.ProdImpl();
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.basic.Prod}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.demo.entity.basic.Prod newInstance(java.lang.String prodName, com.demo.entity.basic.Customer prodCust, com.demo.entity.orga.Peoples principal)
        {
            final com.demo.entity.basic.Prod entity = new com.demo.entity.basic.ProdImpl();
            entity.setProdName(prodName);
            entity.setProdCust(prodCust);
            entity.setPrincipal(principal);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.basic.Prod}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.demo.entity.basic.Prod newInstance(java.lang.String prodName, java.lang.String code, double price, java.util.Date datef, java.lang.String prodType, com.demo.entity.basic.Customer prodCust, com.demo.entity.orga.Peoples principal)
        {
            final com.demo.entity.basic.Prod entity = new com.demo.entity.basic.ProdImpl();
            entity.setProdName(prodName);
            entity.setCode(code);
            entity.setPrice(price);
            entity.setDatef(datef);
            entity.setProdType(prodType);
            entity.setProdCust(prodCust);
            entity.setPrincipal(principal);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}