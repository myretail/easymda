// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.demo.entity.order;

/**
 * 
 */
public abstract class TaskForm
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -6701839336444559044L;

    private java.util.Date setDate;

    /**
     * 
     */
    public java.util.Date getSetDate()
    {
        return this.setDate;
    }

    public void setSetDate(java.util.Date setDate)
    {
        this.setDate = setDate;
    }

    private java.lang.String formState;

    /**
     * 
     */
    public java.lang.String getFormState()
    {
        return this.formState;
    }

    public void setFormState(java.lang.String formState)
    {
        this.formState = formState;
    }

    private java.lang.String remark;

    /**
     * 
     */
    public java.lang.String getRemark()
    {
        return this.remark;
    }

    public void setRemark(java.lang.String remark)
    {
        this.remark = remark;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection tasks = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getTasks()
    {
        return this.tasks;
    }

    public void setTasks(java.util.Collection tasks)
    {
        this.tasks = tasks;
    }

    private com.demo.entity.order.car car;

    /**
     * 
     */
    public com.demo.entity.order.car getCar()
    {
        return this.car;
    }

    public void setCar(com.demo.entity.order.car car)
    {
        this.car = car;
    }

    /**
     * Returns <code>true</code> if the argument is an TaskForm instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof TaskForm))
        {
            return false;
        }
        final TaskForm that = (TaskForm)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.demo.entity.order.TaskForm}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.demo.entity.order.TaskForm}.
         */
        public static com.demo.entity.order.TaskForm newInstance()
        {
            return new com.demo.entity.order.TaskFormImpl();
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.order.TaskForm}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.demo.entity.order.TaskForm newInstance(java.util.Date setDate, java.lang.String formState, com.demo.entity.order.car car)
        {
            final com.demo.entity.order.TaskForm entity = new com.demo.entity.order.TaskFormImpl();
            entity.setSetDate(setDate);
            entity.setFormState(formState);
            entity.setCar(car);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.demo.entity.order.TaskForm}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.demo.entity.order.TaskForm newInstance(java.util.Date setDate, java.lang.String formState, java.lang.String remark, java.util.Collection tasks, com.demo.entity.order.car car)
        {
            final com.demo.entity.order.TaskForm entity = new com.demo.entity.order.TaskFormImpl();
            entity.setSetDate(setDate);
            entity.setFormState(formState);
            entity.setRemark(remark);
            entity.setTasks(tasks);
            entity.setCar(car);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}