#set ($filePath= '')
#set ($definedUnm= 1)
#set ($iListnum= 0)
#foreach($memberAs in $manageable.manageableAssociationEnds)
	#if(!${memberAs.many})  
	#set($iListnum=$iListnum+1)
  #if($iListnum == $definedUnm)	
//本模板的元表是4.1的元表，---begin---------判断"箭尾表/引用表"（"元表"为"箭头表"/"被引用表"）是否为多对多的关系表
#set ($ifcon= 0)
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name != ${manageable.manageableIdentifier.name})
		#set ($ifcon= 1)
	#end
#end		
#if($ifcon == 0)   //true："箭尾表/引用表"（"元表"为"箭头表"/"被引用表"）是多对多关系表
//---end---------判断"箭尾表/引用表"（"元表"为"箭头表"/"被引用表"）是否为多对多的关系表
	#set ($allMenber= 1)
	#set ($firstMenber= '')
	#set ($lastMenber= '')
	#foreach($memberAs in $manageable.manageableAssociationEnds)
		#if(!${memberAs.many})   
			#if($allMenber== 1)
				#if($definedUnm == 1)
					#set ($lastMenber= $memberAs)
				#elseif($definedUnm == 2)
					#set ($firstMenber= $memberAs)
				#end
			#elseif($allMenber== 2)
				#if($definedUnm == 1)
					#set ($firstMenber= $memberAs)
				#elseif($definedUnm == 2)
					#set ($lastMenber= $memberAs)
				#end
			#end
			#set($allMenber= $allMenber + 1)
		#end
	#end
	#set($di=${stringUtils.replace(${manageable.packageName},"entity.","")})
	#set($filePath= "${stringUtils.replace($di,'.','/')}/${lastMenber.association.name}CrudRightAFTab.js")//set (= ${lastMenber.association.name})
	//----------lastMenber = $lastMenber   firstMenber=$firstMenber
	//${lastMenber.association.name}RightAFTab.js	

	//---begin---------判断"引用表" 的 "引用表"是否为tree结构表sno('引用表'是多对多关系表)
				#set ($iftree= 0)
				#foreach($membert in $firstMenber.type.manageableAttributes)
					#if ($membert.name == 'parentId')
						#set ($iftree= 1)
					#end
				#end		
				#if($iftree == 0)
    //---end---------判断"引用表" 的 "引用表"是否为tree结构表sno
//begin--判断"引用表" 的 "引用表"是否为主表('引用表'是多对多关系表)
#set ($subTableTypeFirst = "")
#foreach($memberFirst in $firstMenber.type.manageableAssociationEnds)
	#if(${memberFirst.many})  
		#set ($subTableTypeFirst = ${memberFirst.type})
	#end
#end
#if(!($subTableTypeFirst == ""))
//end--判断"引用表" 的 "引用表"是否为主表
//"引用表" 的 "引用表"是主表('引用表'是多对多关系表)
//这个分支不在这里生成代码，由4.5.js.vsl生成，名称与本4.2.js.vsl相同
#else
//begin--判断"引用表" 的 "引用表"是否为子表('引用表'是多对多关系表)
#if($firstMenber.type.referencingManageables.size()>0)
#foreach($firstMenberRef in $firstMenber.type.referencingManageables)
	#set ($mainTableType = $firstMenberRef)
	#set ($mainTableTypeName = $firstMenberRef.name)
#end
#set ($childRow = 0) 
//"引用表" 的 "引用表"是子表(4OrderRowd.jsp)
//这个分支不在这里生成代码，由4.6.js.vsl生成，名称与本4.2.js.vsl相同(?4-n.js.vsl)
#set ($associationname= ${lastMenber.association.name})
		  var NU${lastMenber.association.name} = false;//needUpdate
		  var url${firstMenber.association.name} = getUrl()+ "services/${manageable.name}ManageService";
		  var deletedata${firstMenber.association.name} =   ",";
		  var adddata${firstMenber.association.name} =    ",";
		  var querydata${firstMenber.association.name}${firstMenber.type.name} =  new Array();
		  var pagenumber${firstMenber.association.name}=1;
		  var totalCount${firstMenber.association.name}=0;
		  var pagesize${firstMenber.association.name}=10;
		  var orderBy${firstMenber.association.name}='0';
		  var queryvo${firstMenber.association.name}=new Object();
		  var oddstyle='';
		  var model${lastMenber.association.name} = new dojox.grid.data.Table(null, querydata${firstMenber.association.name}${firstMenber.type.name});
		  var grid${lastMenber.association.name};

		var getVO${firstMenber.association.name}${firstMenber.type.name}=function(id){

			var pu = new SOAPClientParameters2();
			pu.add('id',id) ;
			SOAPClient.invoke(url${firstMenber.association.name},"get${mainTableTypeName}By${lastMenber.type.name}Id", pu, false,  function GetEnu_callBack(ul, soapResponse){  
			//querydata${firstMenber.association.name}${firstMenber.type.name}=dojo${mainTableTypeName}.${mainTableTypeName}VOtoArray_fun(ul,true);
#if($manageable.referencingManageables.size()==0)			
			querydata${firstMenber.association.name}${firstMenber.type.name}=dojo${manageable.name}.${mainTableTypeName}VOtoArray_fun(ul,true);
#else
		#foreach($memberSub in $manageable.referencingManageables)
			#set ($mainTable = $memberSub.name)
		#end
		querydata${firstMenber.association.name}${firstMenber.type.name}=dojo${mainTable}.${mainTableTypeName}VOtoArray_fun(ul,true);
#end	
			totalCount${firstMenber.association.name}=ul[ul.length-1]["ns:id"]; 
			querydata${firstMenber.association.name}${firstMenber.type.name}.splice(querydata${firstMenber.association.name}${firstMenber.type.name}.length-1,1);
			//querydata${firstMenber.association.name}${firstMenber.type.name}=selected_fun(querydata${firstMenber.association.name}${firstMenber.type.name});
				for(var i = 0; i < querydata${firstMenber.association.name}${firstMenber.type.name}.length; i++){	
				//var data${firstMenber.type.name} = new Array();
				var data${firstMenber.type.name}=querydata${firstMenber.association.name}${firstMenber.type.name}[i][childRow];
				data${firstMenber.type.name}=selected_fun(data${firstMenber.type.name});
				querydata${firstMenber.association.name}${firstMenber.type.name}[i][childRow]=data${firstMenber.type.name};
			}
			}); 
			model${lastMenber.association.name}.setData(querydata${firstMenber.association.name}${firstMenber.type.name});
			var totalpage=Math.ceil(new Number(totalCount${firstMenber.association.name})/pagesize${firstMenber.association.name});
		
		if(totalpage>1){
			if(pagenumber${firstMenber.association.name}==1){
				dijit.byId("but6${lastMenber.association.name}").setDisabled(true);
				dijit.byId("but7${lastMenber.association.name}").setDisabled(false);
			}else if(pagenumber${lastMenber.association.name}==totalpage){
				dijit.byId("but6${lastMenber.association.name}").setDisabled(false);
				dijit.byId("but7${lastMenber.association.name}").setDisabled(true);
			}else{
				dijit.byId("but6${lastMenber.association.name}").setDisabled(false);
				dijit.byId("but7${lastMenber.association.name}").setDisabled(false);
			}
		}else{
			dijit.byId("but6${lastMenber.association.name}").setDisabled(true);
			dijit.byId("but7${lastMenber.association.name}").setDisabled(true);
		
		}
		if(pagesize${firstMenber.association.name}==0){
			totalpage=1;
			dijit.byId("but6${lastMenber.association.name}").setDisabled(true);
			dijit.byId("but7${lastMenber.association.name}").setDisabled(true);
		}
		if(totalpage==1)pagenumber${firstMenber.association.name}=1;
		
		 document.getElementById("rowCount${lastMenber.association.name}").innerHTML=i18nStr.di+" "+pagenumber${firstMenber.association.name}+" "+i18nStr.page+" / "+i18nStr.totle+" "+totalpage+" "+i18nStr.page+" / "+i18nStr.sum+" "+totalCount${firstMenber.association.name}+" "+i18nStr.rowSize; 	

	}
	  
	function selected_fun(transData){
			 for(var i = 0; i < transData.length; i++){		
                        var row = transData[i];
                        if(row[row.length-1]==undefined||row[row.length-1]==''){
							row[0] = false;
						}else{
							row[0] = true;
						}
						transData[i]=row;
						}
				return 		transData;
		  }
	
	function save${lastMenber.association.name}(){
		var delArray=deletedata${firstMenber.association.name}.split(",");
		for(var i=1;i<delArray.length-1;i++){
			var pdel = new SOAPClientParameters();  
			pdel.add('id',delArray[i]);
				SOAPClient.invoke(url${firstMenber.association.name}, "delete${manageable.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
			});
		}
		deletedata${firstMenber.association.name}=",";
		
		var addArray=adddata${firstMenber.association.name}.split(",");
					  
		for(var i=1;i<addArray.length-1;i++){
			var vobject=new Object();
			var ${lastMenber.type.name}vo=new Object();
			${lastMenber.type.name}vo.id=mainID;
			vobject.${lastMenber.name}=${lastMenber.type.name}vo;
			var ${firstMenber.type.name}vo=new Object();
			${firstMenber.type.name}vo.id=addArray[i];
			vobject.${firstMenber.name}=${firstMenber.type.name}vo;
			var padd = new SOAPClientParameters2(); 
			padd.add('${manageable.name}VO',vobject);
			SOAPClient.invoke(url${firstMenber.association.name}, "create${manageable.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
				for(var ii=0;ii<querydata${firstMenber.association.name}${firstMenber.type.name}.length;ii++){
					var subdata=querydata${firstMenber.association.name}${firstMenber.type.name}[ii][childRow];

					for(var j=0;j<subdata.length;j++){
						if(subdata[j][1]==addArray[i]){
							subdata[j][subdata[j].length-1]=ul;
							querydata${firstMenber.association.name}${firstMenber.type.name}[ii][childRow]=subdata;//need?
							break;
							}
					}
				}	
			});
		}
		
		adddata${firstMenber.association.name}=",";
		
	}
	
	
	var queryvo${firstMenber.name}=new Object();
	var build${lastMenber.association.name}=function(){
		if(NU${lastMenber.association.name} && mainID!=undefined && mainID!=''){
			getVO${firstMenber.association.name}${firstMenber.type.name}(mainID);
			if(dijit.byId("grid${lastMenber.association.name}")==undefined){
				grid${lastMenber.association.name} = new dojox.Grid({
							title: "",
							id: "grid${lastMenber.association.name}",
							jsId: "grid${lastMenber.association.name}",
							structure: layout${lastMenber.association.name},
							rowCount:querydata${firstMenber.association.name}${firstMenber.type.name}.length,
							model:model${lastMenber.association.name}
						}, dojo.byId("grid${lastMenber.association.name}"));
						
				grid${lastMenber.association.name}.resize({w: dijit.byId("rightPane").domNode.clientWidth-16,h:dijit.byId("rightPane").domNode.clientHeight-100}); 
			}else{
				grid${lastMenber.association.name}.updateRowCount(querydata${firstMenber.association.name}${firstMenber.type.name}.length); 
			}
			
			NU${lastMenber.association.name}=false;
		}

	}
	
	/*function pageSizeChange${lastMenber.association.name}(mylabel){
			pagesize${lastMenber.association.name}=mylabel;
			getVO${lastMenber.association.name}${manageable.name}(queryvo${lastMenber.association.name}${manageable.name});
		}

		function allpage${lastMenber.association.name}(){
			pagesize${lastMenber.association.name}=0;
			getVO${lastMenber.association.name}${manageable.name}(queryvo${lastMenber.association.name}${manageable.name});
		}*/

		function upPage${lastMenber.association.name}(){
			pagenumber${lastMenber.association.name}--;
			getVO${lastMenber.association.name}${manageable.name}(queryvo${lastMenber.association.name}${manageable.name});
		}
		function downPage${lastMenber.association.name}(){
			pagenumber${lastMenber.association.name}++;
			getVO${lastMenber.association.name}${manageable.name}(queryvo${lastMenber.association.name}${manageable.name});
		}
	

	  #foreach ($associatedClass in $manageable.allAssociatedClasses)  
      #if(${firstMenber.type.name}== ${associatedClass.name})  //associatedClass==manageable
		
        #foreach($memberAs in $associatedClass.AssociationEnds)//对于可修改的layout，($member in $manageable.manageableAssociationEnds)并if(!${member.many})  的字段应弹出Float的选择窗口待测试
	         #if(!${memberAs.many}) 
              #if(${memberAs.association.name}==${firstMenber.association.name})
              
              //begin from 41.4
		var querydata${memberAs.association.name}${associatedClass.name} =  new Array();
		
		
		
		
		
		var getChoise${memberAs.association.name}= function(parentInRowIndex,inRowIndex) {
			var subdata=querydata${firstMenber.association.name}${firstMenber.type.name}[parentInRowIndex][childRow];
			if(true==subdata[inRowIndex][0]){//'+querydata${memberAs.association.name}${associatedClass.name}[inRowIndex][1]+'
				 return  '<input class="dojoxGrid-input"  name="select${memberAs.association.name}" id="" checked="true" type="checkbox" onClick="click${memberAs.association.name}('+parentInRowIndex+','+inRowIndex+')" />';
			 }else{
				 return  '<input class="dojoxGrid-input"  name="select${memberAs.association.name}" id=""  type="checkbox" onClick="click${memberAs.association.name}('+parentInRowIndex+','+inRowIndex+')" />';
			 }
		}

function click${memberAs.association.name}(parentInRowIndex,inRowIndex){//  
	var subdata=querydata${firstMenber.association.name}${firstMenber.type.name}[parentInRowIndex][childRow];
	var len=subdata[inRowIndex].length;		
	if(subdata[inRowIndex][len-1]==undefined||subdata[inRowIndex][len-1]==''){
				var idStr=","+subdata[inRowIndex][1]+",";
			
				if(adddata${memberAs.association.name}.indexOf(idStr)==-1){
					adddata${memberAs.association.name}=adddata${memberAs.association.name}+subdata[inRowIndex][1]+",";
				}else{
					
					adddata${memberAs.association.name}=adddata${memberAs.association.name}.substring(0,adddata${memberAs.association.name}.indexOf(idStr))+adddata${memberAs.association.name}.substring(adddata${memberAs.association.name}.indexOf(idStr)+idStr.length-1);
				}
			
			}else{
				
				var idStr=","+subdata[inRowIndex][len-1]+",";
				
				if(deletedata${memberAs.association.name}.indexOf(idStr)==-1){
					deletedata${memberAs.association.name}=deletedata${memberAs.association.name}+subdata[inRowIndex][len-1]+",";
				}else{
					deletedata${memberAs.association.name}=deletedata${memberAs.association.name}.substring(0,deletedata${memberAs.association.name}.indexOf(idStr))+deletedata${memberAs.association.name}.substring(deletedata${memberAs.association.name}.indexOf(idStr)+idStr.length-1);
				}
			}
	}		


#foreach($member in $associatedClass.manageableAssociationEnds)
	var dojo${member.type.name}Select;			
#end

//from 20.1 begin
#set ($totleinum = 0)   
#foreach($member in $mainTableType.manageableAttributes)
	#if ($member.name != ${mainTableType.manageableIdentifier.name})
		#if ($member.type.dateType)
			#set ($totleinum= $totleinum + 1)
		#end
		#set ($totleinum= $totleinum + 1)
	#end
#end
#foreach($member in $mainTableType.manageableAssociationEnds)
	#if(!${member.many})  
		#set ($totleinum= $totleinum + 1)
	#end
#end
                  // totleinum = $totleinum 
#if($totleinum < 12)
	var layout${lastMenber.association.name} =[{//?????????colSpantoggle
					onBeforeRow: onBeforeRow,
					 cells: [
                      [
						{ name: 'choise', width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },
						{ name: i18nStr.detail, width: 3, get: getCheck${mainTableType.name}, styles: 'text-align: center;' },
							{ name: 'NO.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
	#set ($comma = "")
	#set ($inum = 2)                       
	#foreach($member in $mainTableType.manageableAttributes)
		#if ($member.name != ${mainTableType.manageableIdentifier.name})
		  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
				 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
				#set ($inum= $inum + 1)
		  #elseif ($member.type.dateType)
				${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
				#set ($inum= $inum + 1)
				#set ($comma = ", ")
				${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
				#set ($inum= $inum + 1)
		  #else
			#if ($stringUtils.indexOf($member.name,'Enum')!= -1)
				${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:dojo${manageable.name}.item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
				#set ($inum= $inum + 1)
			#else
				#if ($member.name=='remark')
					${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
					#set ($inum= $inum + 1)
				#else
					${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
					#set ($inum= $inum + 1)
				#end
			#end
		  #end
		  #set ($comma = ", ")
		#end
	#end
	 

	#foreach($member in $mainTableType.manageableAssociationEnds)//
			#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][2];strid=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" class="imgSelectStyle" onclick="dojo${manageable.name}.select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
				#set ($comma = ", ")
				#set ($inum= $inum + 1)
			#else
				#set ($childRow = $inum)
				#set ($inum= $inum + 1)			
			#end
	#end 
	#set($rowinum = $totleinum + 3 )
#else //		($totleinum >= 12)
	#set($rowinum = ($totleinum +3)/ 2)  //rowinum=$rowinum
	#set($ifodd=0)
#if($rowinum*2 != ($totleinum+3))
	#set($rowinum = $rowinum + 1)
	#set($ifodd=1)
#end
		var layout${lastMenber.association.name} =[{//?????????colSpantoggle
					onBeforeRow: onBeforeRow,
					 cells: [
                      [
						{ name: 'choise', width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },
						{ name: i18nStr.detail, width: 3, get: getCheck${mainTableType.name}, styles: 'text-align: center;' },
						{ name: 'NO.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
	#set ($comma = "")
	#set ($inum = 2)  
	#set ($inumStart = 4)  
	#set ($inum2 = 0)	
	#set ($layoutium = 0) 
	#foreach($member in $mainTableType.manageableAttributes)
	#if ($member.name != ${mainTableType.manageableIdentifier.name})
	//---------------------------------------------------------------------//rowinum=$rowinum   inum=$inum
		#if ($inumStart < $rowinum )
			  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #elseif ($member.type.dateType)
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
					#set ($comma = ", ")
				#if ($inumStart == $rowinum)	
					 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					 #set ($inum= $inum + 1)
					 #set ($inumStart= $inumStart + 1)
					 #set ($layoutium = 1) 
					 #set ($inum2 = $inum)
					 ],[
	#set ($comma = "")
				#else
					 ${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					 #set ($inum= $inum + 1)
					 #set ($inumStart= $inumStart + 1)
				#end
			  #else
			  ////////////////////////////////////////
			    #if ($stringUtils.indexOf($member.name,'Enum')!= -1)
					${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:dojo${manageable.name}.item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#if ($member.name=='remark')
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
						#set ($inum= $inum + 1)
						#set ($inumStart= $inumStart + 1)
					#else
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
						#set ($inum= $inum + 1)
						#set ($inumStart= $inumStart + 1)
					#end
				#end
			  #end
			  #set ($comma = ", ")
			//--------------  if ($inum == $rowinum)
		#elseif ($inumStart == $rowinum)//
			#if ($layoutium == 0)
				#if ($member.name != ${mainTableType.manageableIdentifier.name})
					  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
					  #elseif ($member.type.dateType)
						#if($ifodd==1)
							${comma}  {name: ' ',value:' ' ,width: 10 }
							#set ($inumStart= $inumStart + 1)
							//rowinum=$rowinum   inum=$inum
							#set ($ifodd=0)
						#else
							${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
							#set ($comma = ", ")
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
							${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
							#set ($rowinum=$rowinum +2)
							#set ($ifodd = 2 )	
						#end
					  #else
					    #if ($stringUtils.indexOf($member.name,'Enum')!= -1)
							${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:dojo${manageable.name}.item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
						#else
				
							#if ($member.name=='remark')
								${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
								#set ($inum= $inum + 1)
								#set ($inumStart= $inumStart + 1)
							#else
								${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
								#set ($inum= $inum + 1)
								#set ($inumStart= $inumStart + 1)
							#end
						#end
					  #end
					  #set ($comma = ", ")
				#end
				],[
				#set ($comma = "")
				#set ($inum2 = $inum)
				#set ($layoutium = 1) 
			#end
		#else                     //----------------(inum:$inum)  (rowinum: $rowinum)
			//delete1
			 #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 } }
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #elseif ($member.type.dateType)
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"}}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
					#set ($comma = ", ")
					${comma}  {name: i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"}}
					 #set ($inum= $inum + 1)
			  #else
			  ////////////////////////////////////////
			    #if ($stringUtils.indexOf($member.name,'Enum')!= -1)
					${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:dojo${manageable.name}.item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#if ($member.name=='remark')
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10, editor: dojox.grid.editors.Editor,required:${member.required}, editorToolbar: true  }
						#set ($inum= $inum + 1)
						#set ($inumStart= $inumStart + 1)
					#else
						${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:${member.required} ,maxLength:30}
						#set ($inum= $inum + 1)
						#set ($inumStart= $inumStart + 1)
					#end
				#end
			  #end
			  #set ($comma = ", ")
		#end 
	#end
	#end
	
	#foreach($member in $mainTableType.manageableAssociationEnds)//
		#if ($inumStart < $rowinum)
			#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][2];strid=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" class="imgSelectStyle" onclick="dojo${manageable.name}.select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
				#set ($comma = ", ")
				#set ($inum= $inum + 1)
				#set ($inumStart= $inumStart + 1)
			#else
				#set ($childRow = $inum)
				#set ($inum= $inum + 1)			
			#end
		#elseif ($inumStart == $rowinum)
			#if ($layoutium == 0)
				#if(!${member.many})                                             
					 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][2];strid=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" class="imgSelectStyle" onclick="dojo${manageable.name}.select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
					#set ($comma = ", ")
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
				],[
				  #set ($layoutium = 1)
				  #set ($inum2 = $inum)
			#end
		#else  //($inumStart > $rowinum)
			//delete2
			#if(!${member.many})                                             
					 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1]!=undefined){str=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][2];strid=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" class="imgSelectStyle" onclick="dojo${manageable.name}.select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event);"   >';} ,width: 10 }
					#set ($comma = ", ")
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
		#end
	#end 
	#if ($ifodd != 0)
		${comma}  {name: ' ',colSpan: $ifodd ,value:' ' ,width: 10 }
		#set ($comma = ", ")
	#end

	
#end
],[
				{ name: '\u8be6\u7ec6', colSpan: ${rowinum} ,styles: 'padding: 0; margin: 0;', get: getDetail${mainTableType.name} }//value: '<div style="height:0px; background-color: white;"></div>'
			  ]
		  ]

		}];	 
		
		
var detailRows${mainTableType.name}=[];
#if($totleinum < 12)
function onBeforeRow(inDataIndex, inRow) {	if (inRow[1]!=undefined)inRow[1].hidden = !detailRows${mainTableType.name}[inDataIndex];}	
#else
function onBeforeRow(inDataIndex, inRow) {	if (inRow[2]!=undefined)inRow[2].hidden = !detailRows${mainTableType.name}[inDataIndex];}	
#end
function toggle${mainTableType.name}(inIndex, inShow) {
        			//if (!inShow) destroySubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[inIndex][1],"${mainTableType.name}MainDetail");
					if (!inShow) destroySubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[inIndex][1],"${mainTableType.name}Child");
				    detailRows${mainTableType.name}[inIndex] = inShow;
				    dijit.byId("grid${lastMenber.association.name}").updateRow(inIndex); 
				    
    } 

function getCheck${mainTableType.name}(inRowIndex) {
	var image = (detailRows${mainTableType.name}[inRowIndex] ? 'open.gif' : 'closed.gif');
	var show = (detailRows${mainTableType.name}[inRowIndex] ? 'false' : 'true');
	return '<img src="../image/' + image + '" onclick="toggle${mainTableType.name}(' + inRowIndex + ', ' + show + ')" height="11" width="11">';
}

function getDetail${mainTableType.name}(inRowIndex){
	if(detailRows${mainTableType.name}[inRowIndex]){
		var cell = this;
		setTimeout(function() { buildSubgrid${mainTableType.name}(inRowIndex, cell); }, 0);  }
		var h =0;
		if(detailRows${mainTableType.name}[inRowIndex]&&querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][$childRow]!=undefined &&querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][$childRow].length>0){
							h=65+25*querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][$childRow].length;  		}
	return '<div style="height:'+h+'px; background-color: white;"></div>';
}

//function makeSubGridIdGeneral(parentRowIndex,inRowIndex,idString) {return parentRowIndex+"_"+idString+"_" + inRowIndex;		}

//function destroySubGridIdGeneral(parentRowIndex,inRowIndex,idString) {	var subGrid = dijit.byId(makeSubGridIdGeneral(parentRowIndex,inRowIndex,idString));	if (subGrid) subGrid.destroy();	}
var childRow= ${childRow};
var layoutInRowIndex;	  



/*var addrow=[];
		#foreach($member in $childClass.manageableAttributes)
			#if ($member.name != ${childClass.manageableIdentifier.name})
				#if($member.type.dateType)
					addrow.push('');
					addrow.push('');
				#elseif ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					addrow.push('');
				#else
					addrow.push('');
				#end
			#end
		#end
		#foreach($member in $childClass.manageableAssociationEnds)
			#if(!${member.many})
				addrow.push([]);
			#else	
				addrow.push([]);
			#end	
		#end

addrow.splice(0,0,false,0);*/




function buildSubgrid${mainTableType.name}(inRowIndex, inCell) {  //makeSubgridIdMainDetail(id)?idmainDetailGridid
	if(inCell!=undefined && inCell.getNode(inRowIndex)!=undefined){
		var child = inCell.getNode(inRowIndex).firstChild;
		//var child = inCell.getNode(inRowIndex).lastChild;
		//var idmainDetail = makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][1],"${mainTableType.name}MainDetail");//makeSubgridIdMainDetail(querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][1]);//taskmakeSubgridId(taskRowSubdata[inRowIndex][1]);
		var idchild = makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][1],"${mainTableType.name}Child");
		//var subGridMainDetail = dijit.byId(idmainDetail);
		var subGridChild = dijit.byId(idchild);
		var dataChild=querydata${firstMenber.association.name}${firstMenber.type.name}[inRowIndex][$childRow];
		if(dataChild!=undefined){
			if (subGridChild){
				subGridChild.model.setData(dataChild);
				child.appendChild(subGridChild.domNode);
			}else{
				model${mainTableType.name}Child=new dojox.grid.data.Table(null, dataChild);
				var childProps= {
								autoHeight: true, 
								autoRender: false,
								rowCount:dataChild.length,
								model:model${mainTableType.name}Child,							};
				childProps.dataRow = inRowIndex;
				childProps.id = idchild;
				if(Math.ceil(inRowIndex/2)>inRowIndex/2){
					childLayoutOdd=buildChildLayout(pre,headerstyleodd,inRowIndex);	
					childProps.structure=childLayoutOdd;
				}else{
					childLayout=buildChildLayout(pre,headerstyle,inRowIndex);
					childProps.structure=childLayout;
				}
				subGridChild = new dojox.Grid(childProps, child);//grid?????DIV?С
			}
			if (subGridChild) {
				subGridChild.render();
				subGridChild.cacheHeight = subGridChild.domNode.offsetHeight;
			}	      				
		}
		
		
		inCell.grid.rowHeightChanged(inRowIndex);
    }   
}		
		
		
		
		
		
//from 20.1 end

//from 20.2 begin
//${member.type.name}SubCrudForSubGrid.js==${firstMenber.type.name}SubCrudForSubGrid.js
//获得主表类型var mainTable=new VO();

var addRowSub = function(addindex){
	  var subGrid = dijit.byId(makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[addindex][1],"${mainTableTypeName}Child"));
	  subGrid.addRow([false,0,"","","","","","","","","","","","","","","","","",""],subGrid.model.getRowCount());
}


var deleteSub= function(mainRow,subIndexRow,subId){
	var subGrid = dijit.byId(makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[mainRow][1],"${mainTableTypeName}Child"));
	var s= new Array();
	s[0]=subIndexRow;
	if(subId!=0){
		var pdel = new SOAPClientParameters();      
	    pdel.add('id',subId);
	    SOAPClient.invoke(url${firstMenber.type.name}, "delete${firstMenber.type.name}", pdel, false,  function GetEnu_callBack(ul, soapResponse){
	});}
	subGrid.model.remove(s);
 }

function saveSubRow(subGrid,thisCell,i){		 
         var vobject=new Object();
		 var passAll=0;
         var padd = new SOAPClientParameters2();
	     vobject.id=thisCell[1];
#set ($inum = 2)                       
#foreach($member in $firstMenber.type.manageableAttributes)
#if ($member.name != ${firstMenber.type.manageableIdentifier.name})
#if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
             if(dojox.validate.isInRange(thisCell[$inum],{max:9999999, min:0})){
              var  n=new NumberQuery(); n.upNumber=thisCell[$inum];vobject.$member.name=n;
             }else{subGrid.getCell(subGrid.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}> not be double</span>";passAll=1;}//double
#elseif ($member.type.fullyQualifiedName == 'java.util.Calendar'||$member.type.fullyQualifiedName == 'java.util.Date')
 var  d=new DateTimeQuery();
             if(thisCell[$inum] instanceof Date){ d.upDate=dojo.date.locale.format(thisCell[$inum], subGrid.getCell(subGrid.model.fieldArray[$inum]).constraint);
             }else{subGrid.getCell(subGrid.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be date</span>"; passAll=1;}//not null
 #set ($inum= $inum + 1) 
             if(thisCell[$inum] instanceof Date){
             d.upDate=d.upDate+" "+dojo.date.locale.format(thisCell[$inum], subGrid.getCell(subGrid.model.fieldArray[$inum]).constraint);
             vobject.$member.name=d;
             }else{subGrid.getCell(subGrid.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>must be time</span>"; passAll=1;}//not null

#else        
 #if ($member.required)
             if(dojox.validate.isText(thisCell[$inum], {minlength: 1})){vobject.$member.name=thisCell[$inum];
             }else{subGrid.getCell(subGrid.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;}//not null
 #else
              vobject.$member.name=thisCell[$inum];
 #end
#end

#set ($inum= $inum + 1)
#end
#end

#foreach($member in $firstMenber.type.manageableAssociationEnds)
	#if(!${member.many})
		#set ($ifmain= '0')
		#foreach($member2 in $firstMenber.type.referencingManageables)
			#if(${member2.name}==${member.type.name})
				#set ($ifmain= '1')
			#end
		#end
		#if(${ifmain}=='1')
			var mainTable=new Object();
			mainTable.id=querydata${firstMenber.association.name}${firstMenber.type.name}[subGrid.dataRow][1];
            vobject.${member.name}=mainTable;
		#else
			var manageable=new Object();
			 if(querydata${firstMenber.association.name}${firstMenber.type.name}[subGrid.dataRow][childRow][i]!=''&&querydata${firstMenber.association.name}${firstMenber.type.name}[subGrid.dataRow][childRow][i][$inum]!=undefined){
				manageable.id=querydata${firstMenber.association.name}${firstMenber.type.name}[subGrid.dataRow][childRow][i][$inum][1];
				vobject.${member.name}=manageable;
			 }else{
			 subGrid.getCell(subGrid.model.fieldArray[$inum]).getNode(i).innerHTML="<span style={color:red;line-height:16px}>can not be null</span>"; passAll=1;
			 }
		#end
		#set ($inum= $inum + 1)
	#end
#end



       if(passAll==0){
             if(thisCell[1]==0){//create new row
                padd.add('${firstMenber.type.name}VO',vobject);
                SOAPClient.invoke(url${firstMenber.type.name}, "create${firstMenber.type.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                subGrid.model.setDatum(ul,i,1);
				
                });
	         }else{//modify row
                padd.add('${firstMenber.type.name}VO',vobject);
                SOAPClient.invoke(url${firstMenber.type.name}, "update${firstMenber.type.name}", padd, false,  function GetEnu_callBack(ul, soapResponse){
                });
	         }
			 //querydata${firstMenber.association.name}${firstMenber.type.name}[document.getElementById('erowIndex${firstMenber.type.name}').value][childRow]=querydataSub;//????????????????????????????????????????????????????????????????????????????/
        } }
		
function call_funUpdGridSub(mainRow,subIndexRow) {
var subGrid = dijit.byId(makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[mainRow][1],"${mainTableTypeName}Child"));
	
	if(subGrid){
	var sall=subGrid.model.data;
	if(subIndexRow==undefined || subIndexRow==''){
		for(var i=0;i<sall.length;i++){
         var thisCell=sall[i];
         saveSubRow(subGrid,thisCell,i);
		}//for
	}else{
		 var thisCell=sall[subIndexRow];
		saveSubRow(subGrid,thisCell,subIndexRow);
	}}
}		  

var url${firstMenber.type.name} = getUrl()+ "services/${mainTableTypeName}ManageService";
//var deletedata${firstMenber.type.name} =  new Array();
//var querydata${firstMenber.type.name} =  new Array();
var deletedataSub =  new Array();
//var querydataSub=  new Array();
var pagenumber${firstMenber.type.name}=1;
var pagesize${firstMenber.type.name}=10;
var orderBy${firstMenber.type.name}='0';
var queryvo${firstMenber.type.name}=new Object();
var oddstyle='';
//var modelChildAdd = new dojox.grid.data.Table(null, querydataSub);
var childLayout;
var childLayoutOdd;

function buildChildLayout(pre,mystyle,addRowIndex){
	var myLayout=[{
          
                 //根据field的值，依据默认的顺序，从js中的toArray转换方法返回的querydata中取数据
                       
 cells: [ [
			//{ name: '<img src="../image/addsmall.gif" onclick="addRowSub('+addRowIndex +');"   height="18" width="18" border="0">' ,get:function(inRowIndex) {return '<img src="../image/delsmall.gif" onclick="deleteSub('+addRowIndex +','+inRowIndex+','+(querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow]!=undefined ? 0:querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex][1])+');"  height="18" width="18" border="0">&nbsp;&nbsp;&nbsp;<img src="../image/savesmall.gif" onclick="call_funUpdGridSub('+addRowIndex +','+inRowIndex+');"  height="18" width="18" border="0">';}, width: 6,styles: 'text-align: center;',headerStyles:mystyle},//
			{ name: pre+i18nStr.chose, width: 3, styles: 'text-align: center;', headerStyles:mystyle , get:function(inRowIndex){return getChoise${memberAs.association.name}(addRowIndex,inRowIndex);}},//
		    { name: pre+i18nStr.no, width: 3, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} ,headerStyles:mystyle},//
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $firstMenber.type.manageableAttributes)
#if ($member.name != ${firstMenber.type.manageableIdentifier.name})
  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
         ${comma} {name: pre+i18nStr.$member.name,field:${inum}, width: 8,editor: dojox.grid.editors.Dijit, editorClass: "mydojo.NumberTextBox", constraint: {min:0,max:9999999,places:4 },headerStyles:mystyle }
		#set ($inum= $inum + 1)
  #elseif ($member.type.dateType)
		${comma}  {name:pre+i18nStr.${member.name},field:${inum}, width: 8,editor: dojox.grid.editors.DateTextBox,  formatter: formatDate,  constraint: { selector: "date",datePattern: "yyyy-MM-dd"},headerStyles:mystyle}
		#set ($inum= $inum + 1)
		${comma}  {name: pre+i18nStr.${member.name}Time,field:${inum}, width: 8,editor: dojox.grid.editors.TimeTextBox, formatter: formatDate, constraint: {selector: "time" ,timePattern: "HH:mm"},headerStyles:mystyle}
		#set ($inum= $inum + 1)
  #else
    #if ($stringUtils.indexOf($member.name,'Enum')!= -1)
		${comma}  {name: i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.FilteringSelect ,options:dojo${mainTableTypeName}.item${member.name}Option,required:${member.required} ,invalidMessage:'can not be empty'}
		#set ($inum= $inum + 1)
	#else
		#if ($member.name=='remark')
		    ${comma}  {name: pre+i18nStr.$member.name, field: ${inum},width: 20, editor: dojox.grid.editors.Editor, editorToolbar: true  ,headerStyles:mystyle}
			#set ($inum= $inum + 1)
		#else
			${comma}  {name: pre+i18nStr.$member.name, field: ${inum},width: 10 , editor: mydojo.ValidationTextBox ,required:false ,maxLength:30,headerStyles:mystyle}
			#set ($inum= $inum + 1)
		#end
    #end
  #end
  #set ($comma = ", ")
#end
#end  

#foreach($member in $firstMenber.type.manageableAssociationEnds)//对于单表不许其他判断
	#if(!${member.many})
		#if(${mainTableTypeName}!=${member.type.name})	
				 ${comma}  {name: pre+i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';var strid;if(querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex]!=undefined && querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex][${inum}]!=undefined&& querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex][${inum}][2]!=undefined){str=querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex][${inum}][2];strid=querydata${firstMenber.association.name}${firstMenber.type.name}[addRowIndex][childRow][inRowIndex][${inum}][1];} return str+'<img src="../image/selectFloat.gif" height="16" width="16" style="vertical-align:middle;margin-top:0px;margin-left:8px;" onclick=" dojo${manageable.name}.select${member.type.name}('+strid+','+inRowIndex+',${inum},0,event,'+addRowIndex+');"   >';} ,width: 10 ,headerStyles:mystyle}
		#set ($comma = ", ")
		#end
		#set ($inum= $inum + 1)
	#end
#end
                                        ] ]
                           }];  
						   
			return myLayout;			   
}

#foreach($member in $firstMenber.type.manageableAssociationEnds)
	#if(${mainTableTypeName}!=${member.type.name})	
		function select${member.type.name}Fun(rep){
			querydata${firstMenber.association.name}${firstMenber.type.name}[dojo${manageable.name}.mainRowIndex${member.type.name}][childRow][ dojo${manageable.name}.select${member.type.name}InRow][ dojo${manageable.name}.no${member.type.name}]=rep;
			var subGrid = dijit.byId(makeSubGridIdGeneral('',querydata${firstMenber.association.name}${firstMenber.type.name}[dojo${manageable.name}.mainRowIndex${member.type.name}][1],"${mainTableTypeName}Child"));
			subGrid.model.setDatum(rep, dojo${manageable.name}.select${member.type.name}InRow, dojo${manageable.name}.no${member.type.name});	
		}
	#end	
#end			



//from 20.2 end




 

				#end
           #end
        #end
	#end
    #end
#else
//end--判断"引用表" 的 "引用表"是否为子表	
	//以下是"引用表"为多对多表，"引用表" 的 "引用表"为单纯表的情况	('引用表'是多对多关系表)
	
#end
#end
	#else
//isTree 以下是"引用表"为多对多表，"引用表" 的 "引用表"为树表的情况
			
		
#end

#else
//---begin---------判断是否直接关联了tree结构表sno,即"引用表"为树表
#set ($iftree= 0)
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name == 'parentId')
		#set ($iftree= 1)
	#end
#end		
#if($iftree == 1)
//---end---------判断是否直接关联了tree结构表sno,即"引用表"为树表


#else
//判断"引用表"是否是主表begin
#set ($subTableType = "")
#foreach($member in $manageable.manageableAssociationEnds)
	#if(${member.many})  
		#set ($subTableType = ${member.type})
	#end
#end
#if(!($subTableType == ""))
//判断"引用表"是否是主表end
//这个分支不在这里生成代码，由4.3.js.vsl生成，名称与本4.2.js.vsl相同
#else
//判断"引用表"是否是子表begin
#if($manageable.referencingManageables.size()>0)
//这个分支不在这里生成代码，由4.4.js.vsl生成，名称与本4.2.js.vsl相同
#else
//判断"引用表"是否是子表end
//以下是"引用表"是普通表


#end
#end
#end
#end
#end
#end
#end
