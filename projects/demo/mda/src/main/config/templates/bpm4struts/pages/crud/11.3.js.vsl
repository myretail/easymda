#set ($subTableType = "")
#foreach($member in $manageable.manageableAssociationEnds)
	#if(${member.many})  
		#set ($subTableType = ${member.type})
	#end
#end
#if(!($subTableType == ""))
#set ($totleinum = 0)   
#foreach($member in $manageable.manageableAttributes)
	#if ($member.name != ${manageable.manageableIdentifier.name})
		#set ($totleinum= $totleinum + 1)
	#end
#end
#foreach($member in $manageable.manageableAssociationEnds)
	#if(!${member.many})  
		#set ($totleinum= $totleinum + 1)
	#end
#end
#if($totleinum >= 0)//12???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
                  // totleinum = $totleinum 
#set($di=${stringUtils.replace(${manageable.packageName},"entity.","")})
#set($filePath= "${stringUtils.replace($di,'.','/')}/${manageable.name}GridStyle2.js")
var querydataSub=[];	
function buildChildLayout2(pre,mystyle){
	var myLayout=[{  
				//noscroll: true,
				cells: [//优化时可加入：如过记录数超过12，即变为两行
                      [
#set ($comma = "")
#set ($inum = 2)                       
#foreach($member in $$subTableType.manageableAttributes)
		#if ($member.name != $$subTableType.manageableIdentifier.name)
		  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
				 ${comma} {name: pre+i18nStr.$member.name,field:${inum}, width: 8,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #elseif ($member.type.dateType)
				${comma}  {name: pre+i18nStr.${member.name},field:${inum}, width: 8,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #else
				${comma}  {name: pre+i18nStr.$member.name, field: ${inum},width: 10,headerStyles:mystyle}
				#set ($inum= $inum + 1)
		  #end
		  #set ($comma = ", ")
		#end
#end  

#foreach($member in $$subTableType.manageableAssociationEnds)//?????????????????????????????????????????????????/从manageableAssociationEnds中先去掉${member.many}为true；再去除主表！！！！！！！！！！！！！！！！
		#if(!${member.many}) 
			
				${comma}  {name: pre+i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';if(querydataSub[inRowIndex]!=undefined && querydataSub[inRowIndex][${inum}]!=undefined){str=querydataSub[inRowIndex][${inum}][2];} return str;} ,width: 10,headerStyles:mystyle }
				#set ($comma = ", ")
				#set ($inum= $inum + 1)
		#else
			#set ($inum= $inum + 1)
		#end
#end                  
     
					]]}];	 
					return myLayout; 
}
	
	
	#set($rowinum = ($totleinum +2)/ 2)  //rowinum=$rowinum
	#set($ifodd=0)
#if($rowinum*2 != ($totleinum+2))
	#set($rowinum = $rowinum + 1)
	#set($ifodd=1)
#end
		var mainLayout2 =[{//?????????colSpantoggle
					onBeforeRow2: onBeforeRow2,
					 cells: [
                      [
						//{ name: 'choise', width: 3,field:0, styles: 'text-align: center;', editor: dojox.grid.editors.Bool },
						{ name: i18nStr.detail, width: 3, get: getCheck${manageable.name}2, styles: 'text-align: center;' },
						{ name: 'NO.', width: 2, styles: 'text-align: center;', get: function(inRowIndex){ return inRowIndex+1;} },//
	#set ($comma = "")
	#set ($inum = 2)  
	#set ($inumStart = 3)  
	#set ($inum2 = 0)	
	#set ($layoutium = 0) 
	#foreach($member in $manageable.manageableAttributes)
	#if ($member.name != ${manageable.manageableIdentifier.name})
	//---------------------------------------------------------------------//rowinum=$rowinum   inum=$inum
		#if ($inumStart < $rowinum )
			  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8 }
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #elseif ($member.type.dateType)
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #else
			  ////////////////////////////////////////
					${comma}  {name: i18nStr.${member.name},field:${inum}, width: 8}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #end
			  #set ($comma = ", ")
			//--------------  if ($inum == $rowinum)
		#elseif ($inumStart == $rowinum)//
			#if ($layoutium == 0)
				#if ($member.name != ${manageable.manageableIdentifier.name})
					  #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
					  #elseif ($member.type.dateType)
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
					  #else
							 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
							#set ($inum= $inum + 1)
							#set ($inumStart= $inumStart + 1)
					  #end
					  #set ($comma = ", ")
				#end
				],[
				#set ($comma = "")
				#set ($inum2 = $inum)
				#set ($layoutium = 1) 
			#end
		#else                     //----------------(inum:$inum)  (rowinum: $rowinum)
			//delete1
			 #if ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #elseif ($member.type.dateType)
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #else
			  ////////////////////////////////////////
					 ${comma} {name: i18nStr.$member.name,field:${inum}, width: 8}
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
			  #end
			  #set ($comma = ", ")
		#end 
	#end
	#end
	
	#foreach($member in $manageable.manageableAssociationEnds)//
		#if ($inumStart < $rowinum)
			#if(!${member.many})                                             
				 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];} return str;} ,width: 10 }
				#set ($comma = ", ")
				#set ($inum= $inum + 1)
				#set ($inumStart= $inumStart + 1)
			#else
				#set ($childRow = $inum)
				#set ($inum= $inum + 1)			
			#end
		#elseif ($inumStart == $rowinum)
			#if ($layoutium == 0)
				#if(!${member.many})                                             
					${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];} return str;} ,width: 10 }
					#set ($comma = ", ")
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
				],[
				  #set ($layoutium = 1)
				  #set ($inum2 = $inum)
			#end
		#else  //($inumStart > $rowinum)
			//delete2
			#if(!${member.many})                                             
					 ${comma}  {name: i18nStr.$member.name,field: ${inum},get:function(inRowIndex){ var str='';if(querydata${manageable.name}[inRowIndex]!=undefined && querydata${manageable.name}[inRowIndex][${inum}]!=undefined){str=querydata${manageable.name}[inRowIndex][${inum}][2];} return str;} ,width: 10 }
					#set ($comma = ", ")
					#set ($inum= $inum + 1)
					#set ($inumStart= $inumStart + 1)
				#else
					#set ($childRow = $inum)
					#set ($inum= $inum + 1)			
				#end
		#end
	#end 
	#if ($ifodd != 0)
		${comma}  {name: ' ',colSpan: $ifodd ,value:' ' ,width: 10 }
		#set ($comma = ", ")
	#end

	

],[
				{ name: '\u8be6\u7ec6', colSpan: ${rowinum} ,styles: 'padding: 0; margin: 0;', get: getDetail${manageable.name}2 }//value: '<div style="height:0px; background-color: white;"></div>'
			  ]
		  ]

		}];	 


var detailRows${manageable.name}2=[];

function onBeforeRow2(inDataIndex, inRow) {	if (inRow[2]!=undefined)inRow[2].hidden = !detailRows${manageable.name}2[inDataIndex];}	

function toggle${manageable.name}2(inIndex, inShow) {
        			//if (!inShow) destroySubGridIdGeneral('',querydata${manageable.name}[inIndex][1],"${manageable.name}MainDetail");
					if (!inShow) destroySubGridIdGeneral('',querydata${manageable.name}[inIndex][1],"${manageable.name}Child");
				    detailRows${manageable.name}2[inIndex] = inShow;
				    dijit.byId("grid${manageable.name}").updateRow(inIndex); 
				    
    } 

function getCheck${manageable.name}2(inRowIndex) {
	var image = (detailRows${manageable.name}2[inRowIndex] ? 'open.gif' : 'closed.gif');
	var show = (detailRows${manageable.name}2[inRowIndex] ? 'false' : 'true');
	return '<img src="../image/' + image + '" onclick="toggle${manageable.name}2(' + inRowIndex + ', ' + show + ')" height="11" width="11">';
}

function getDetail${manageable.name}2(inRowIndex){
	if(detailRows${manageable.name}2[inRowIndex]){
		var cell = this;
		setTimeout(function() { buildSubgrid${manageable.name}2(inRowIndex, cell); }, 0);  }
		var h =0;
		if(detailRows${manageable.name}2[inRowIndex]&&querydata${manageable.name}[inRowIndex][$childRow]!=undefined &&querydata${manageable.name}[inRowIndex][$childRow].length>0){
							h=65+25*querydata${manageable.name}[inRowIndex][$childRow].length;  		}
	return '<div style="height:'+h+'px; background-color: white;"></div>';
}

//function makeSubGridIdGeneral(parentRowIndex,inRowIndex,idString) {return parentRowIndex+"_"+idString+"_" + inRowIndex;		}

//function destroySubGridIdGeneral(parentRowIndex,inRowIndex,idString) {	var subGrid = dijit.byId(makeSubGridIdGeneral(parentRowIndex,inRowIndex,idString));	if (subGrid) subGrid.destroy();	}
var childRow= ${childRow};
var layoutInRowIndex;	  



var addrow=[];
		#foreach($member in $childClass.manageableAttributes)
			#if ($member.name != ${childClass.manageableIdentifier.name})
				#if($member.type.dateType)
					addrow.push('');
					addrow.push('');
				#elseif ($member.type.fullyQualifiedName == 'double' || $member.type.fullyQualifiedName == 'long')
					addrow.push('');
				#else
					addrow.push('');
				#end
			#end
		#end
		#foreach($member in $childClass.manageableAssociationEnds)
			#if(!${member.many})
				addrow.push([]);
			#else	
				addrow.push([]);
			#end	
		#end

addrow.splice(0,0,false,0);




function buildSubgrid${manageable.name}2(inRowIndex, inCell) {  //makeSubgridIdMainDetail(id)?idmainDetailGridid
	if(inCell!=undefined && inCell.getNode(inRowIndex)!=undefined){
		var child = inCell.getNode(inRowIndex).firstChild;
		//var child = inCell.getNode(inRowIndex).lastChild;
		//var idmainDetail = makeSubGridIdGeneral('',querydata${manageable.name}[inRowIndex][1],"${manageable.name}MainDetail");//makeSubgridIdMainDetail(querydata${manageable.name}[inRowIndex][1]);//taskmakeSubgridId(taskRowSubdata[inRowIndex][1]);
		var idchild = makeSubGridIdGeneral('',querydata${manageable.name}[inRowIndex][1],"${manageable.name}Child");
		//var subGridMainDetail = dijit.byId(idmainDetail);
		var subGridChild = dijit.byId(idchild);
		querydataSub=querydata${manageable.name}[inRowIndex][$childRow];
		if(querydataSub!=undefined){
			if (subGridChild){
				subGridChild.model.setData(querydataSub);
				child.appendChild(subGridChild.domNode);
			}else{
				model${manageable.name}Child=new dojox.grid.data.Table(null, querydataSub);
				var childProps= {
								autoHeight: true, 
								autoRender: false,
								rowCount:querydataSub.length,
								model:model${manageable.name}Child,							};
				childProps.dataRow = inRowIndex;
				childProps.id = idchild;
				if(Math.ceil(inRowIndex/2)>inRowIndex/2){
					childLayoutOdd=buildChildLayout2(pre,headerstyleodd,inRowIndex);	
					childProps.structure=childLayoutOdd;
				}else{
					childLayout=buildChildLayout2(pre,headerstyle,inRowIndex);
					childProps.structure=childLayout;
				}
				subGridChild = new dojox.Grid(childProps, child);//grid?????DIV?С
			}
			if (subGridChild) {
				subGridChild.render();
				subGridChild.cacheHeight = subGridChild.domNode.offsetHeight;
			}	      				
		}
		

		inCell.grid.rowHeightChanged(inRowIndex);
    }   
}
var styleSign=0;

#end
#end
