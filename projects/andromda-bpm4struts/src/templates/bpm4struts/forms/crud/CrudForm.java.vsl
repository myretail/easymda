#set ($generatedFile = "${manageable.formBeanFullPath}.java")
##
##
##
#macro (resetField $fieldName $fieldType)
#if ($fieldType.primitive)
#if ($fieldType.fullyQualifiedName == 'boolean')
$fieldName = false;
#else
$fieldName = 0;
#end
#else
$fieldName = null;
#end
#end
##
##  START TEMPLATE
##
// license-header java merge-point
package $manageable.manageablePackageName;

public final class $manageable.formBeanClassName
    extends org.apache.struts.validator.ValidatorForm
    implements java.io.Serializable
{
    private java.util.List $manageable.listName = null;

    public java.util.List ${manageable.listGetterName}()
    {
        return this.$manageable.listName;
    }

    public void ${manageable.listSetterName}(java.util.List $manageable.listName)
    {
        this.$manageable.listName = $manageable.listName;
    }

#set ($identifier = $manageable.manageableIdentifier)
    private ${identifier.type.fullyQualifiedName}[] selectedRows = null;

    public ${identifier.type.fullyQualifiedName}[] getSelectedRows()
    {
        return this.selectedRows;
    }

    public void setSelectedRows(${identifier.type.fullyQualifiedName}[] selectedRows)
    {
        this.selectedRows = selectedRows;
    }

#foreach ($member in $manageable.manageableAttributes)
#if ($member.type.enumeration)
#set ($memberType = $member.type.literalType.fullyQualifiedName)
#else
#set ($memberType = $member.type.fullyQualifiedName)
#end
#if ($member.needsFileUpload)
    private org.apache.struts.upload.FormFile $member.name;

    $member.visibility org.apache.struts.upload.FormFile ${member.getterName}()
    {
        return this.$member.name;
    }

    $member.visibility void ${member.setterName}(org.apache.struts.upload.FormFile $member.name)
    {
        this.$member.name = $member.name;
    }

#else
    private $memberType $member.name;

    $member.visibility $memberType ${member.getterName}()
    {
        return this.$member.name;
    }

    $member.visibility void ${member.setterName}($memberType $member.name)
    {
        this.$member.name = $member.name;
    }

#if ($member.type.dateType)
    private static final java.text.DateFormat ${member.name}Formatter = new java.text.SimpleDateFormat("$member.dateFormat");
#set ($lenient = !$member.strictDateFormat)
    static { ${member.name}Formatter.setLenient($lenient); }

    $member.visibility java.lang.String ${member.getterName}AsString()
    {
        return ($member.name == null) ? null : ${member.name}Formatter.format($member.name);
    }

    $member.visibility void ${member.setterName}AsString(java.lang.String $member.name)
    {
        try
        {
#if ($member.type.name.equals("Timestamp"))
            this.$member.name = (org.apache.commons.lang.StringUtils.isBlank($member.name)) ? null : new java.sql.Timestamp(${member.name}Formatter.parse($member.name).getTime());
#else
            this.$member.name = (org.apache.commons.lang.StringUtils.isBlank($member.name)) ? null : ${member.name}Formatter.parse($member.name);
#end
        }
        catch (java.text.ParseException pe)
        {
            throw new java.lang.RuntimeException(pe);
        }
    }

#end
#end
#end
#foreach ($member in $manageable.manageableAssociationEnds)
#set ($identifier = $member.type.manageableIdentifier)
#set ($fieldType = $member.manageableIdentifier.type.fullyQualifiedName)
#if ($member.many)
#set ($fieldType = "${fieldType}[]")
#end
    private $fieldType $member.name;

    $member.visibility $fieldType ${member.getterName}()
    {
        return this.$member.name;
    }

    $member.visibility void ${member.setterName}($fieldType $member.name)
    {
        this.$member.name = $member.name;
    }

    private java.util.List ${member.name}BackingList;

    $member.visibility java.util.List ${member.getterName}BackingList()
    {
        return this.${member.name}BackingList;
    }

    public void ${member.setterName}BackingList(java.util.List ${member.name}BackingList)
    {
        this.${member.name}BackingList = ${member.name}BackingList;
    }

#end
    /**
     * @see org.apache.struts.validator.ValidatorForm#reset(org.apache.struts.action.ActionMapping,javax.servlet.http.HttpServletRequest)
     */
    public void reset(org.apache.struts.action.ActionMapping mapping, javax.servlet.http.HttpServletRequest request)
    {
#foreach ($member in $manageable.manageableAttributes)
#if ($member.type.enumeration)
        #resetField($member.name $member.type.literalType)
#else
        #resetField($member.name $member.type)
#end
#end
#foreach ($member in $manageable.manageableAssociationEnds)
#set ($identifier = $member.type.manageableIdentifier)
        #resetField($member.name $identifier.type)
        ${member.name}BackingList = null;
#end
    }
}